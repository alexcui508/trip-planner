{"version":3,"sources":["images/travel1.jpg","images/travel2.jpg","images/travel3.jpg","images/travel4.jpg","images/travel5.jpg","images/travel6.jpg","images/travel7.jpg","components/Map.jsx","components/BusinessDetail.jsx","components/EventCard.jsx","components/DayCard.jsx","components/Calendar.jsx","components/SearchResultCard.jsx","components/Search.jsx","components/StartMenu.jsx","components/Planner.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Map","props","state","viewport","width","height","latitude","longitude","zoom","this","onViewportChange","setState","mapboxApiAccessToken","Icon","color","name","Component","BusinessDetail","details","photos","map","photo","Modal","trigger","Image","src","size","verticalAlign","basic","Content","image","wrapped","Divider","hidden","fitted","full_address","location","display_address","address","i","length","push","categories","titles","categoryTitle","title","loading","getCategories","renderedPhotos","getPhotos","getAddress","Grid","columns","divided","Row","Column","Header","as","Subheader","List","bulleted","Item","display_phone","price","rating","coordinates","React","EventCard","getYelpDetailedUrl","id","searchHandler","eventInfo","fetch","method","headers","Authorization","then","response","json","data","convertRating","renderedStars","numStars","addHalf","Number","isInteger","getRenderedEventCard","isHovered","Segment","attached","secondary","v","join","eventDate","eventTime","deleteSelectedEvent","renderedEventCard","style","marginRight","textAlign","link","onClick","marginBottom","onMouseEnter","onMouseLeave","Container","DayCard","handleClick","e","titleProps","index","newIndex","activeIndex","getRenderedEvents","eventsWithTimes","renderedEvents","sortedEventsWithTimes","Object","keys","sort","time1","time2","Date","forEach","key","event","business","Accordion","Title","active","Label","Group","Calendar","groupEvents","sortedEvents","selected","event1","event2","date","getTime","groupedEvents","toDateString","time","getRenderedDays","renderedDays","getTimeRange","dates","startDate","endDate","start","end","timeRange","RESULTS_HEIGHT","window","innerHeight","toString","marginTop","container","paddingLeft","SearchResultCard","handleSelect","dateIndex","addBusiness","localeDates","d","toLocaleDateString","raised","celled","image_url","objectFit","float","position","bottom","review_count","Dropdown","placeholder","fluid","selection","options","text","value","onChange","clearable","onClear","timeFormat","icon","Button","labelPosition","disabled","Search","getSelectedLocation","getYelpURL","query","lat","lon","results","businesses","clearResults","getPlaceholderCards","cards","Placeholder","Dimmer","inverted","Loader","renderedLoadingResults","Input","action","target","content","overflow","maxHeight","paddingTop","paddingBottom","StartMenu","handleChange","hasOwnProperty","split","getDates","currentDate","addDays","days","valueOf","setDate","getDate","call","getBackground","slideImages","travel1","travel2","travel3","travel4","travel5","travel6","travel7","images","duration","transition","handleStartPlan","datesRange","startPlan","dateStrings","format","s","l","temp","stripLocationName","dateCheck","placeCheck","renderedBackground","maxWidth","Form","iconPosition","onSuggestSelect","lng","label","Link","to","Planner","addBusinessToPlanner","selectedEvents","selectedEventsCopy","indexToRemove","selectedEvent","splice","exact","path","render","App","className","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,8SCuC5BC,E,YA/Bb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,SAAU,CACRC,MAAO,IACPC,OAAQ,IACRC,SAAU,EAAKL,MAAMK,SACrBC,UAAW,EAAKN,MAAMM,UACtBC,KAAM,KARO,E,sEAaT,IAAD,OACP,OACE,kBAAC,IAAD,iBACMC,KAAKP,MAAMC,SADjB,CAEEO,iBAAkB,SAACP,GAAD,OAAc,EAAKQ,SAAS,CAAER,cAChDS,qBArBU,8FAuBV,kBAAC,IAAD,CACEN,SAAUG,KAAKR,MAAMK,SACrBC,UAAWE,KAAKR,MAAMM,WAEtB,kBAACM,EAAA,EAAD,CAAMC,MAAM,MAAMC,KAAK,gB,GAzBfC,aC2EHC,E,oLAjEX,OAXaR,KAAKR,MAAMiB,QAAQC,OACJC,KAAI,SAACC,GAAD,OAC9B,6BACE,kBAACC,EAAA,EAAD,CAAOC,QAAS,kBAACC,EAAA,EAAD,CAAOC,IAAKJ,EAAOK,KAAK,SAASC,cAAc,WAAaC,OAAK,GAC/E,kBAACN,EAAA,EAAMO,QAAP,CAAeC,OAAK,GAClB,kBAACN,EAAA,EAAD,CAAOO,SAAO,EAACL,KAAK,MAAMD,IAAKJ,MAGnC,kBAACW,EAAA,EAAD,CAASC,QAAM,EAACC,QAAM,U,mCAS1B,IAFA,IAAIC,EAAe1B,KAAKR,MAAMiB,QAAQkB,SAASC,gBAC3CC,EAAU,GACLC,EAAI,EAAGA,EAAIJ,EAAaK,OAAS,EAAGD,IAC3CD,EAAQG,KAAKN,EAAaI,IAC1BD,EAAQG,KAAK,MAGf,OADAH,EAAQG,KAAKN,EAAaA,EAAaK,OAAS,IACzCF,I,sCAMP,IAFA,IAAII,EAAajC,KAAKR,MAAMiB,QAAQwB,WAChCC,EAAS,GACJJ,EAAI,EAAGA,EAAIG,EAAWF,OAAS,EAAGD,IAAK,CAC9C,IAAIK,EAAgBF,EAAWH,GAAGM,MAClCF,EAAOF,KAAKG,GACZD,EAAOF,KAAK,MAGd,OADAE,EAAOF,KAAKC,EAAWA,EAAWF,OAAS,GAAGK,OACvCF,I,+BAIP,GAAIlC,KAAKR,MAAM6C,QACb,OAAO,kBAACjC,EAAA,EAAD,CAAMiC,SAAO,EAAC/B,KAAK,mBAG5B,IAAI4B,EAASlC,KAAKsC,gBACdC,EAAiBvC,KAAKwC,YACtBX,EAAU7B,KAAKyC,aACnB,OACE,kBAACC,EAAA,EAAD,CAAMC,QAAS,EAAGC,SAAO,GACvB,kBAACF,EAAA,EAAKG,IAAN,KACE,kBAACH,EAAA,EAAKI,OAAN,KACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,MACT,kBAAC5C,EAAA,EAAD,CAAME,KAAK,UACX,kBAACyC,EAAA,EAAO3B,QAAR,gBAEDmB,GAEH,kBAACG,EAAA,EAAKI,OAAN,CAAanD,MAAO,GAClB,kBAACoD,EAAA,EAAD,CAAQC,GAAG,MACT,kBAACD,EAAA,EAAO3B,QAAR,KAAiBpB,KAAKR,MAAMiB,QAAQH,MACpC,kBAACyC,EAAA,EAAOE,UAAR,KACGf,IAGL,kBAACgB,EAAA,EAAD,CAAMC,UAAQ,GACZ,kBAACD,EAAA,EAAKE,KAAN,KAAW,kBAACF,EAAA,EAAKH,OAAN,gBAAmClB,GAC9C,kBAACqB,EAAA,EAAKE,KAAN,KAAW,kBAACF,EAAA,EAAKH,OAAN,cAAiC/C,KAAKR,MAAMiB,QAAQ4C,eAC/D,kBAACH,EAAA,EAAKE,KAAN,KAAW,kBAACF,EAAA,EAAKH,OAAN,cAAiC/C,KAAKR,MAAM8D,OACvD,kBAACJ,EAAA,EAAKE,KAAN,KAAW,kBAACF,EAAA,EAAKH,OAAN,eAAkC/C,KAAKR,MAAM+D,SAE1D,kBAAC,EAAD,CAAK1D,SAAUG,KAAKR,MAAMiB,QAAQ+C,YAAY3D,SAAUC,UAAWE,KAAKR,MAAMiB,QAAQ+C,YAAY1D,mB,GAtEjF2D,IAAMlD,WCwIpBmD,E,YA/Hb,WAAYlE,GAAQ,IAAD,8BACjB,4CAAMA,KASRmE,mBAAqB,SAACC,GACpB,MAAO,0EAA4EA,GAXlE,EAcnBC,cAAgB,WAAO,IACbC,EAAc,EAAKtE,MAAnBsE,UAER,EAAK5D,SAAS,CACZmC,SAAS,IACR,WACD0B,MAAM,EAAKJ,mBAAmBG,EAAUF,IAAK,CAC3CI,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/BC,cAAe,6IAEhBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKpE,SAAS,CACZO,QAAS6D,EACTjC,SAAS,WA/BA,EAqCnBkC,cAAgB,WAAO,IAGjBC,EAAgB,GAChBC,EAHkB,EAAKjF,MAAnBsE,UAGiBP,OACrBmB,GAAU,EAETC,OAAOC,UAAUH,KACpBA,GAAY,GACZC,GAAU,GAGZ,IAAK,IAAI5C,EAAI,EAAGA,EAAI2C,EAAU3C,IAC5B0C,EAAcxC,KAAK,kBAAC5B,EAAA,EAAD,CAAME,KAAK,OAAOD,MAAM,YAO7C,OAJIqE,GACFF,EAAcxC,KAAK,kBAAC5B,EAAA,EAAD,CAAME,KAAK,YAAYD,MAAM,YAG3CmE,GAzDU,EA4DnBK,qBAAuB,WAAO,IACpBC,EAAc,EAAKrF,MAAnBqF,UACAhB,EAAc,EAAKtE,MAAnBsE,UAER,OACE,kBAACiB,EAAA,EAAD,CAASC,UAAQ,EAAC3E,MAAM,OAAO4E,UAAWH,GACxC,kBAAC/B,EAAA,EAAD,CAAQC,GAAG,MACRc,EAAUxD,KACX,kBAACiB,EAAA,EAAD,CAASC,QAAM,IACf,kBAACuB,EAAA,EAAOE,UAAR,KAAmBa,EAAU7B,WAAWtB,KAAI,SAAAuE,GAAC,OAAIA,EAAE9C,SAAO+C,KAAK,OAC/D,kBAACpC,EAAA,EAAOE,UAAR,KAAmBa,EAAUnC,SAASC,gBAAgBuD,KAAK,OAC3D,kBAACpC,EAAA,EAAOE,UAAR,KAAmBa,EAAUT,kBApEnC,EAAK5D,MAAQ,CACXgB,QAAS,GACT4B,SAAS,EACTyC,WAAW,GANI,E,sEA6ET,IAAD,SACsB9E,KAAKP,MAA1B4C,EADD,EACCA,QAAS5B,EADV,EACUA,QADV,EAE0DT,KAAKR,MAA9DsE,EAFD,EAECA,UAAWsB,EAFZ,EAEYA,UAAWC,EAFvB,EAEuBA,UAAWC,EAFlC,EAEkCA,oBAEnCd,EAAgBxE,KAAKuE,gBACrBgB,EAAoBvF,KAAK6E,uBAE/B,OACE,oCACE,yBAAKW,MAAO,CAAEC,YAAa,SACzB,kBAAC1C,EAAA,EAAD,CAAQC,GAAG,KAAKgC,SAAS,OACvB,kBAACtC,EAAA,EAAD,CAAMC,QAAQ,SACZ,kBAACD,EAAA,EAAKG,IAAN,KACE,kBAACH,EAAA,EAAKI,OAAN,KAAcuC,GACd,kBAAC3C,EAAA,EAAKI,OAAN,CAAa4C,UAAU,QAAQF,MAAO,CAACC,YAAa,UAClD,kBAACrF,EAAA,EAAD,CAAMuF,MAAI,EAACrF,KAAK,SAASD,MAAM,MAAMuF,QAAS,WAAON,EAAoBF,EAAWC,WAM9F,kBAACxE,EAAA,EAAD,CAAOC,QACL,yBACE0E,MAAO,CAAEK,aAAc,OAAQJ,YAAa,QAC5CG,QAAS5F,KAAK6D,cACdiC,aAAc,kBAAM,EAAK5F,SAAS,CAAE4E,WAAW,KAC/CiB,aAAc,kBAAM,EAAK7F,SAAS,CAAE4E,WAAW,MAE9CS,IAGH,kBAAC1E,EAAA,EAAMkC,OAAP,KAAeqC,EAAf,KAA4BC,GAC5B,kBAACxE,EAAA,EAAMO,QAAP,KACE,kBAAC,EAAD,CACEiB,QAASA,EACT5B,QAASA,EACT6C,MACE,kBAAC0C,EAAA,EAAD,CAAWR,MAAO,CAACnF,MAAM,UACtByD,EAAUR,OAGfC,OAAQiB,W,GAvHEf,IAAMlD,WCqEf0F,E,YAvEb,WAAYzG,GAAQ,IAAD,8BACjB,4CAAMA,KAOR0G,YAAc,SAACC,EAAGC,GAAgB,IACxBC,EAAUD,EAAVC,MAEFC,EADkB,EAAK7G,MAArB8G,cACyBF,GAAS,EAAIA,EAE9C,EAAKnG,SAAS,CAAEqG,YAAaD,KAbZ,EAgBnBE,kBAAoB,WAAO,IAAD,EACoC,EAAKhH,MAAzDiH,EADgB,EAChBA,gBAAiBrB,EADD,EACCA,UAAWE,EADZ,EACYA,oBAEhCoB,EAAiB,GAEfC,EAAwB,GAO9B,IAAK,IAAMtB,KANXuB,OAAOC,KAAKJ,GAAiBK,MAAK,SAACC,EAAOC,GACxC,OAAO,IAAIC,KAAK,cAAgBF,GAAS,IAAIE,KAAK,cAAgBD,MACjEE,SAAQ,SAACC,GACVR,EAAsBQ,GAAOV,EAAgBU,MAGvBR,EAAuB,CAC7C,IAAMS,EAAQT,EAAsBtB,GACpCqB,EAAe1E,KAAK,kBAAC,EAAD,CAAWoD,UAAWA,EAAWtB,UAAWsD,EAAMC,SAAUhC,UAAWA,EAAWC,oBAAqBA,KAG7H,OAAOoB,GA9BP,EAAKjH,MAAQ,CACX8G,YAAa,GAJE,E,sEAoCT,IACAA,EAAgBvG,KAAKP,MAArB8G,YACAnB,EAAcpF,KAAKR,MAAnB4F,UAEFsB,EAAiB1G,KAAKwG,oBAE5B,OACE,kBAACc,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUC,MAAX,CAAiBC,OAAwB,IAAhBjB,EAAmBF,MAAO,EAAGT,QAAS5F,KAAKkG,aAClE,kBAACuB,EAAA,EAAMC,MAAP,CAAazG,KAAK,OAChB,kBAACwG,EAAA,EAAD,KACE,kBAACrH,EAAA,EAAD,CAAME,KAAK,aACV8E,GAEH,kBAACqC,EAAA,EAAD,CAAOpH,MAAM,QACVqG,EAAe3E,UAItB,kBAACuF,EAAA,EAAUlG,QAAX,CAAmBoG,OAAwB,IAAhBjB,GACzB,kBAAC7D,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKG,IAAN,KACE,kBAACH,EAAA,EAAKI,OAAN,CAAanD,MAAO,IAEpB,kBAAC+C,EAAA,EAAKI,OAAN,CAAanD,MAAO,IACjB+G,W,GA9DKjD,IAAMlD,WCsFboH,E,2MArFbC,YAAc,WAAO,IAGbC,EAFe,EAAKrI,MAAlBsI,SAEsBhB,MAAK,SAACiB,EAAQC,GAAa,OAAOD,EAAOE,KAAKC,UAAYF,EAAOC,KAAKC,aAEhGC,EAAgB,GAYpB,OAVAN,EAAaX,SAAQ,SAACE,GACpB,IAAIhC,EAAYgC,EAAMa,KAAKG,eAC3BD,EAAc/C,GAAa,MAG7ByC,EAAaX,SAAQ,SAACE,GACpB,IAAIhC,EAAYgC,EAAMa,KAAKG,eAC3BD,EAAc/C,GAAWgC,EAAMiB,MAAQjB,KAGlCe,G,EAGTG,gBAAkB,WAChB,IAAIC,EAAe,GACbJ,EAAgB,EAAKP,cAE3B,IAAK,IAAMxC,KAAa+C,EAAe,CACrC,IAAM1B,EAAkB0B,EAAc/C,GACtCmD,EAAavG,KAAK,kBAAC,EAAD,CAASyE,gBAAiBA,EAAiBrB,UAAWA,EAAWE,oBAAqB,EAAK9F,MAAM8F,uBAGrH,OAAOiD,G,EAGTC,aAAe,WAAO,IACZC,EAAU,EAAKjJ,MAAfiJ,MAEFC,EAAYD,EAAM,GAClBE,EAAUF,EAAMA,EAAM1G,OAAS,GAErC,MAAO,CACL6G,MAAOF,EAAUN,eACjBS,IAAKF,EAAQP,iB,wEAKf,IAAMG,EAAevI,KAAKsI,kBACpBQ,EAAY9I,KAAKwI,eACjBO,GAAkBC,OAAOC,YAAc,IAAIC,WAAa,KAE9D,OACE,kBAAClD,EAAA,EAAD,KACE,yBAAKR,MAAO,CAAE2D,UAAW,OAAQtD,aAAc,SAC7C,kBAACnD,EAAA,EAAD,CAAM0G,WAAS,GACb,kBAAC1G,EAAA,EAAKG,IAAN,KACE,kBAACH,EAAA,EAAKI,OAAN,KACE,kBAACC,EAAA,EAAD,CAAQ9B,KAAK,QAAb,kBACA,kBAACyB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKG,IAAN,KACE,kBAACH,EAAA,EAAKI,OAAN,CAAanD,MAAO,GAClB,kBAACoD,EAAA,EAAD,CAAQ9B,KAAK,SAAb,eAEF,kBAACyB,EAAA,EAAKI,OAAN,CAAanD,MAAO,GAAI6F,MAAO,CAACK,aAAc,SAC5C,kBAAC9C,EAAA,EAAD,CAAQ9B,KAAK,QAAQZ,MAAM,QAAQyI,EAAUF,QAE/C,kBAAClG,EAAA,EAAKI,OAAN,CAAanD,MAAO,GAClB,kBAACoD,EAAA,EAAD,CAAQ9B,KAAK,SAAb,aAEF,kBAACyB,EAAA,EAAKI,OAAN,CAAanD,MAAO,IAClB,kBAACoD,EAAA,EAAD,CAAQ9B,KAAK,QAAQZ,MAAM,QAAQyI,EAAUD,YAQ3D,kBAACtH,EAAA,EAAD,CAASE,QAAM,IACf,kBAACuE,EAAA,EAAD,CAAWR,MAAO,CAAE,UAAa,OAAQ,UAAa,SAAU5F,OAAQmJ,EAAgBM,YAAa,SAClGd,Q,GA/EY9E,IAAMlD,W,+DC6Gd+I,E,YA1Gb,WAAY9J,GAAQ,IAAD,8BACjB,4CAAMA,KAQR+J,aAAe,SAACpD,GAAO,IAAD,EACQ,EAAK1G,MAAzB+J,EADY,EACZA,UAAWnB,EADC,EACDA,KADC,EAEqB,EAAK7I,OAE9CiK,EAJoB,EAEZA,aAFY,EAECpC,SAFD,EAEWoB,MAEHe,GAAYnB,IAbvB,EAgBnB9D,cAAgB,WAAO,IAGjBC,EAAgB,GAChBC,EAHiB,EAAKjF,MAAlB6H,SAGgB9D,OACpBmB,GAAU,EAETC,OAAOC,UAAUH,KACpBA,GAAY,GACZC,GAAU,GAGZ,IAAK,IAAI5C,EAAI,EAAGA,EAAI2C,EAAU3C,IAC5B0C,EAAcxC,KAAK,kBAAC5B,EAAA,EAAD,CAAME,KAAK,OAAOD,MAAM,YAO7C,OAJIqE,GACFF,EAAcxC,KAAK,kBAAC5B,EAAA,EAAD,CAAME,KAAK,YAAYD,MAAM,YAG3CmE,GAjCP,EAAK/E,MAAQ,CACX+J,WAAY,EACZnB,KAAM,IALS,E,sEAuCT,IAAD,SACqBrI,KAAKP,MAAzB4I,EADD,EACCA,KAAMmB,EADP,EACOA,UADP,EAEqBxJ,KAAKR,MAAzB6H,EAFD,EAECA,SAEFqC,EAJC,EAEWjB,MAEQ9H,KAAI,SAAAgJ,GAAC,OAAIA,EAAEC,wBAC/BpF,EAAgBxE,KAAKuE,gBAE3B,OACE,kBAACQ,EAAA,EAAD,CAAS8E,QAAM,EAACrE,MAAO,CAAEC,YAAa,SACpC,kBAAC/C,EAAA,EAAD,CAAMoH,QAAM,GACV,kBAACpH,EAAA,EAAKG,IAAN,KACE,kBAACH,EAAA,EAAKI,OAAN,CAAanD,MAAO,GAClB,kBAACoB,EAAA,EAAD,CAAOC,IAAKqG,EAAS0C,UAAWvE,MAAO,CAAEwE,UAAW,QAASrK,MAAO,OAAQC,OAAQ,YAEtF,kBAAC8C,EAAA,EAAKI,OAAN,CAAanD,MAAO,IAClB,4BAAK0H,EAAS/G,MACd,yBAAKkF,MAAO,CAAEyE,MAAO,OAAQtK,MAAM,QACjC,8BAAO0H,EAASpF,WAAWtB,KAAI,SAAAuE,GAAC,OAAIA,EAAE9C,SAAO+C,KAAK,OADpD,IACkE,6BAC/DkC,EAAS/D,OACR,oCACE,uBAAGkC,MAAO,CAACnF,MAAO,UAAWgH,EAAS/D,OAAU,6BAC/CkB,GAGL,yBAAKgB,MAAO,CAAE0E,SAAU,WAAYC,OAAQ,IAAKxK,MAAM,QACtD0H,EAAShE,cADV,IACyB,6BACxBgE,EAAS1F,SAASC,gBAAgBuD,KAAK,MACxC,6BAAM,+BAGR,yBAAKK,MAAO,CAAEyE,MAAO,UAClB5C,EAAS+C,aADZ,WAEE,6BACA,6BACA,kBAACC,EAAA,EAAD,CACEC,YAAY,cACZC,OAAK,EACLC,WAAS,EACTC,QAASf,EAAY/I,KAAI,SAACuE,EAAGpD,GAAJ,MAAW,CAAEqF,IAAKE,EAASzD,GAAKsB,EAAGwF,KAAMxF,EAAGyF,MAAO7I,MAC5E0D,MAAO,CAAEK,aAAc,OACvB+E,SAAU,SAACzE,EAAG7B,GAAJ,OAAa,EAAKpE,SAAS,CAAEsJ,UAAWlF,EAAKqG,WAEzD,kBAAC,YAAD,CACErK,KAAK,OACLqK,MAAOtC,EACPuC,SAAU,SAACzE,EAAG7B,GAAJ,OAAa,EAAKpE,SAAS,CAAEmI,KAAM/D,EAAKqG,SAClDE,WAAS,EACTC,QAAS,WAAO,EAAK5K,SAAS,CAAEmI,KAAM,MACtC0C,WAAW,OACXC,MAAM,EACNV,YAAY,cACZ9E,MAAO,CAAEK,aAAc,SAEzB,kBAACoF,EAAA,EAAD,CAAQD,MAAI,EAAC3K,MAAM,OAAO6K,cAAc,QAAQC,UAAyB,IAAf3B,GAA6B,KAATnB,EAAazC,QAAS5F,KAAKuJ,cAAzG,cAEE,kBAACnJ,EAAA,EAAD,CAAME,KAAK,kB,GA/FEmD,IAAMlD,WCyJtB6K,E,YApJb,WAAY5L,GAAQ,IAAD,8BACjB,4CAAMA,KASR6L,oBAAsB,WACpB,OAAO,EAAK5L,MAAMkC,SAAW,EAAKlC,MAAMkC,SAAW,EAAKnC,MAAMmC,UAX7C,EAcnB2J,WAAa,SAACC,GACZ,IAAM5J,EAAW,EAAK0J,sBACtB,MAAO,sFAAwFE,EAAQ,aAAe5J,EAAS6J,IAAItC,WAAa,cAAgBvH,EAAS8J,IAAIvC,YAhB5J,EAmBnBrF,cAAgB,SAACuD,GAAW,IAClBmE,EAAU,EAAK9L,MAAf8L,MACR,EAAKrL,SAAS,CACZmC,SAAS,IACR,WACD0B,MAAM,EAAKuH,WAAWC,GAAQ,CAC9BvH,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/BC,cAAe,6IAEhBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKpE,SAAS,CACZwL,QAASpH,EAAKqH,WACdtJ,SAAS,WAnCE,EAyCnBuJ,aAAe,WACb,EAAK1L,SAAS,CACZqL,MAAO,GACPG,QAAS,MA5CM,EAgDnBG,oBAAsB,WAEpB,IADA,IAAIC,EAAQ,GACHhK,EAAI,EAAGA,EAAI,GAAIA,IACtBgK,EAAM9J,KACJ,kBAAC+C,EAAA,EAAD,CAASoC,IAAKrF,EAAG+H,QAAM,EAACrE,MAAO,CAAEC,YAAa,SAC5C,kBAAC/C,EAAA,EAAD,CAAMoH,QAAM,GACV,kBAACpH,EAAA,EAAKG,IAAN,KACE,kBAACH,EAAA,EAAKI,OAAN,CAAanD,MAAO,GAClB,kBAACoM,EAAA,EAAD,KACE,kBAACA,EAAA,EAAYhL,MAAb,CAAmByE,MAAO,CAAEwE,UAAW,QAASrK,MAAO,OAAQC,OAAQ,aAG3E,kBAAC8C,EAAA,EAAKI,OAAN,CAAanD,MAAO,IAChB,kBAACqM,EAAA,EAAD,CAAQxE,QAAM,EAACyE,UAAQ,GACrB,kBAACC,EAAA,EAAD,CAAQD,UAAQ,GAAhB,iBAQhB,OAAOH,GAnEP,EAAKrM,MAAQ,CACX8L,MAAO,GACPG,QAAS,GACTrJ,SAAS,GANM,E,sEAyET,IAAD,SAC6BrC,KAAKP,MAAjC8L,EADD,EACCA,MAAOG,EADR,EACQA,QAASrJ,EADjB,EACiBA,QADjB,EAEwBrC,KAAKR,MAA5BiJ,EAFD,EAECA,MAAOgB,EAFR,EAEQA,YAETV,GAAkBC,OAAOC,YAAc,IAAIC,WAAa,KACxDiD,EAAyBnM,KAAK6L,sBAC9BlK,EAAW3B,KAAKqL,sBAEtB,OACE,kBAACrF,EAAA,EAAD,KACE,yBAAKR,MAAO,CAAE2D,UAAW,OAAQtD,aAAc,SAC7C,kBAACnD,EAAA,EAAD,CAAMC,QAAQ,SACZ,kBAACD,EAAA,EAAKG,IAAN,KACE,kBAACH,EAAA,EAAKI,OAAN,CAAanD,MAAO,IAClB,kBAACoD,EAAA,EAAD,CAAQ9B,KAAK,QAAb,uBACuBU,EAASrB,QAIpC,kBAACoC,EAAA,EAAKG,IAAN,KACE,kBAACH,EAAA,EAAKI,OAAN,KACE,kBAACsJ,EAAA,EAAD,CACE5G,MAAO,CAAEC,YAAa,OAAQ0D,UAAW,QACzCkD,OAAQ,CACNhM,MAAO,OACP2K,KAAM,SACNpF,QAAS5F,KAAK6D,cACdsH,UAAWI,GAEbZ,MAAOY,EACPjB,YAAa,SACbM,SAAU,SAAAzE,GAAO,EAAKjG,SAAS,CAAEqL,MAAOpF,EAAEmG,OAAO3B,WAEnD,kBAACM,EAAA,EAAD,CACEzF,MAAO,CAAEC,YAAa,OAAQ0D,UAAW,QACzC6B,KAAK,OACLE,cAAc,QACd7K,MAAM,OACNkM,QAAQ,kBACR3G,QAAS,kBACP,EAAK1F,SAAS,CACZqL,MAAO,IACN,EAAK1H,kBAGX6H,GAAWA,EAAQ,IAClB,kBAACT,EAAA,EAAD,CACEzF,MAAO,CAAEC,YAAa,OAAQ0D,UAAW,QACzC6B,KAAK,gBACLE,cAAc,QACd7K,MAAM,OACNkM,QAAQ,gBACR3G,QAAS5F,KAAK4L,mBAO1B,kBAACrK,EAAA,EAAD,CAASE,QAAM,IACdY,GAAW8J,EACXT,GAAWA,EAAQ,IAClB,kBAAC1F,EAAA,EAAD,CAAWR,MAAO,CAAEgH,SAAU,OAAQC,UAAW1D,EAAgB2D,WAAY,OAAQC,cAAe,SAClG,kBAAC3G,EAAA,EAAD,KACG0F,EAAQ/K,KAAI,SAACgK,EAAO7I,GAAR,OACX,kBAAC,EAAD,CAAkBqF,IAAKrF,EAAEoH,WAAY7B,SAAUsD,EAAOlC,MAAOA,EAAOgB,YAAaA,c,GA3I5EhG,IAAMlD,W,2LCuHZqM,G,YAvHb,WAAYpN,GAAQ,IAAD,8BACjB,4CAAMA,KASRqN,aAAe,SAACzF,EAAD,GAA6B,IACL,EADd9G,EAAkB,EAAlBA,KAAMqK,EAAY,EAAZA,MACzB,EAAKlL,MAAMqN,eAAexM,IAC5B,EAAKJ,UAAL,mBAAiBI,EAAOqK,GAAxB,0BACaA,EAAMoC,MAAM,OAAOhL,OAAS,GAA4C,IAAjC4I,EAAMoC,MAAM,OAAO,GAAGhL,QAD1E,KAZe,EAiBnBiL,SAAW,SAACtE,EAAWC,GAQrB,IAPA,IAAIF,EAAQ,GACRwE,EAAcvE,EACdwE,EAAU,SAASC,GACjB,IAAIlF,EAAO,IAAIhB,KAAKjH,KAAKoN,WAEzB,OADAnF,EAAKoF,QAAQpF,EAAKqF,UAAYH,GACvBlF,GAENgF,GAAetE,GACpBF,EAAMzG,KAAKiL,GACXA,EAAcC,EAAQK,KAAKN,EAAa,GAE1C,OAAOxE,GA7BU,EAgCnB+E,cAAgB,WACd,IAAMC,EAAc,CAClBC,IACAC,IACAC,IACAC,IACAC,KACAC,KACAC,MAGF,OACE,kBAAC,IAAD,CACEC,OAAQR,EACRS,SAAU,EACVC,WAAY,KA/CC,EAoDnBC,gBAAkB,SAACjI,GAAO,IAAD,EACU,EAAK1G,MAA9B4O,EADe,EACfA,WAAY1M,EADG,EACHA,SACZ2M,EAAc,EAAK9O,MAAnB8O,UAEJC,EAAcF,EAAWtB,MAAM,OACnC,SAASyB,EAAOC,GACd,IAAIC,EAAID,EAAE1B,MAAM,KACZ4B,EAAOD,EAAE,GAGb,OAFAA,EAAE,GAAKA,EAAE,GACTA,EAAE,GAAKC,EACAD,EAAEvJ,KAAK,KAEhB,IAAIyD,EAAQ,IAAI3B,KAAKuH,EAAOD,EAAY,KACpC1F,EAAM,IAAI5B,KAAKuH,EAAOD,EAAY,KAGtCD,EAAU3M,EADE,EAAKqL,SAASpE,EAAOC,KAnEhB,EAuEnB+F,kBAAoB,SAACjN,GACnB,OAAOA,EAASoL,MAAM,KAAK,IAtE3B,EAAKtN,MAAQ,CACX4O,WAAY,GACZ1M,SAAU,KACVkN,WAAW,EACXC,YAAY,GANG,E,sEA2ET,IAAD,SACuC9O,KAAKP,MAA3C4O,EADD,EACCA,WAAYQ,EADb,EACaA,UAAWC,EADxB,EACwBA,WACzBC,EAAqB/O,KAAKwN,gBAEhC,OACE,yBAAKhI,MAAO,CAAC5F,OAAQ,UAClBmP,EACD,kBAACrM,EAAA,EAAD,CAAMgD,UAAU,SAASF,MAAO,CAAE5F,OAAQ,QAAUsB,cAAc,UAChE,kBAACwB,EAAA,EAAKI,OAAN,CAAa0C,MAAO,CAAEwJ,SAAU,MAC9B,kBAACjK,EAAA,EAAD,KACE,kBAAChC,EAAA,EAAD,kCACA,kBAACkM,EAAA,EAAD,CAAMhO,KAAM,SACV,kBAAC,kBAAD,CACEX,KAAK,aACLgK,YAAY,YACZK,MAAO0D,EACPa,aAAa,OACbtE,SAAU5K,KAAK6M,eAEjB,kBAAC,IAAD,CAAYsC,gBAAiB,SAAArH,GACvBA,GACF,EAAK5H,SAAS,CACZ4O,YAAY,EACZnN,SAAU,CACR6J,IAAK1D,EAASnG,SAAS6J,IACvBC,IAAK3D,EAASnG,SAASyN,IACvB9O,KAAM,EAAKsO,kBAAkB9G,EAASuH,aAK9C,6BACA,kBAACpE,EAAA,EAAD,CAAQjI,GAAIsM,IAAMC,GAAG,QAAQ3J,QAAS5F,KAAKoO,gBAAiBjD,SAAU0D,GAAaC,EAAYzO,MAAM,OAAOkK,OAAK,EAACtJ,KAAK,SAAvH,4B,GA5GQwC,IAAMlD,W,UCyDfiP,G,YA/Db,WAAYhQ,GAAQ,IAAD,8BACjB,4CAAMA,KASRiQ,qBAAuB,SAACpI,EAAUY,EAAMI,GAAU,IACxCqH,EAAmB,EAAKjQ,MAAxBiQ,eACR,EAAKxP,SAAS,CACZwP,eAAe,GAAD,mBAAMA,GAAN,CAAsB,CAAErI,SAAUA,EAAUY,KAAMA,EAAMI,KAAMA,QAb7D,EAiBnB/C,oBAAsB,SAACF,EAAWC,GAAe,IACvCqK,EAAmB,EAAKjQ,MAAxBiQ,eACJC,EAAkB,YAAOD,GAEzBE,GAAiB,EACrBD,EAAmBzI,SAAQ,SAAC2I,EAAe/N,GACrC+N,EAAc5H,KAAKG,iBAAmBhD,GAAayK,EAAcxH,OAAShD,IAC5EuK,EAAgB9N,MAIhB8N,GAAiB,IACnBD,EAAmBG,OAAOF,EAAe,GACzC,EAAK1P,SAAS,CACZwP,eAAgBC,MA/BH,EAoCnBrB,UAAY,SAAC3M,EAAU8G,GACrB,EAAKvI,SAAS,CAAEyB,SAAUA,EAAU8G,MAAOA,KAlC3C,EAAKhJ,MAAQ,CACXiQ,eAAgB,GAChB/N,SAAU,GACV8G,MAAO,IANQ,E,sEAwCT,IAAD,SACqCzI,KAAKP,MAAzCiQ,EADD,EACCA,eAAgBjH,EADjB,EACiBA,MAAO9G,EADxB,EACwBA,SAE/B,OACE,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAOoO,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,GAAD,CAAW3B,UAAW,EAAKA,eAC/D,kBAAC,KAAD,CAAO0B,KAAK,QAAQC,OAAQ,kBAC1B,kBAACvN,EAAA,EAAD,CAAMC,QAAS,EAAGC,SAAO,EAAC4C,MAAO,CAAC5F,OAAQ,UACxC,kBAAC8C,EAAA,EAAKG,IAAN,KACE,kBAACH,EAAA,EAAKI,OAAN,KACE,kBAAC,EAAD,CAAU2F,MAAOA,EAAOX,SAAU4H,EAAgBpK,oBAAqB,EAAKA,uBAE9E,kBAAC5C,EAAA,EAAKI,OAAN,KACE,kBAAC,EAAD,CAAQ2F,MAAOA,EAAO9G,SAAUA,EAAU8H,YAAa,EAAKgG,kC,GAtDtDhM,IAAMlD,W,OCMb2P,OARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,GAAD,QCIcC,QACW,cAA7BpH,OAAOrH,SAAS0O,UAEe,UAA7BrH,OAAOrH,SAAS0O,UAEhBrH,OAAOrH,SAAS0O,SAASC,MACvB,2DCZNC,IAASN,OAAO,kBAAC,GAAD,MAASO,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzM,MAAK,SAAA0M,GACjCA,EAAaC,kB","file":"static/js/main.c23c1d41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/travel1.eda7aff3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel2.f85b1e62.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel3.373599b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel4.06f3c00f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel5.3b3c1978.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel6.ca2510a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel7.eba269f6.jpg\";","import React from 'react';\nimport { Component } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { Icon } from 'semantic-ui-react';\n\nlet MAP_API_KEY = \"pk.eyJ1IjoiYWxleGN1aSIsImEiOiJjanYzNTVsejcyY29uNDNwZml4YjZ3dHV4In0.f4di1n6PqkuH-Lksizp3-Q\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        width: 400,\n        height: 400,\n        latitude: this.props.latitude,\n        longitude: this.props.longitude,\n        zoom: 16,\n      }\n    };\n  }\n\n  render() {\n    return (\n      <ReactMapGL\n        {...this.state.viewport}\n        onViewportChange={(viewport) => this.setState({ viewport })}\n        mapboxApiAccessToken={MAP_API_KEY}\n      >\n        <Marker\n          latitude={this.props.latitude}\n          longitude={this.props.longitude}\n        >\n          <Icon color='red' name='point' />\n        </Marker>\n      </ReactMapGL>\n    );\n  }\n}\n\nexport default Map;","import React from 'react';\nimport { Grid, Modal, Image, Icon, Divider, Header, List } from 'semantic-ui-react';\nimport Map from './Map';\n\nclass BusinessDetail extends React.Component {\n  getPhotos() {\n    let photos = this.props.details.photos;\n    let renderedPhotos = photos.map((photo) =>\n      <div>\n        <Modal trigger={<Image src={photo} size='medium' verticalAlign='middle' />} basic>\n          <Modal.Content image>\n            <Image wrapped size='big' src={photo} />\n          </Modal.Content>\n        </Modal>\n        <Divider hidden fitted />\n      </div>\n    );\n    return renderedPhotos;\n  }\n\n  getAddress() {\n    let full_address = this.props.details.location.display_address;\n    let address = [];\n    for (let i = 0; i < full_address.length - 1; i++) {\n      address.push(full_address[i]);\n      address.push(\", \");\n    }\n    address.push(full_address[full_address.length - 1]);\n    return address;\n  }\n\n  getCategories() {\n    let categories = this.props.details.categories;\n    let titles = [];\n    for (let i = 0; i < categories.length - 1; i++) {\n      let categoryTitle = categories[i].title;\n      titles.push(categoryTitle);\n      titles.push(\", \");\n    }\n    titles.push(categories[categories.length - 1].title);\n    return titles;\n  }\n\n  render() {\n    if (this.props.loading) {\n      return <Icon loading name='circle notched' />\n    }\n\n    let titles = this.getCategories();\n    let renderedPhotos = this.getPhotos();\n    let address = this.getAddress();\n    return (\n      <Grid columns={3} divided>\n        <Grid.Row>\n          <Grid.Column>\n            <Header as='h1'>\n              <Icon name='photo' />\n              <Header.Content>Photos</Header.Content>\n            </Header>\n            {renderedPhotos}\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header as='h1'>\n              <Header.Content>{this.props.details.name}</Header.Content>\n              <Header.Subheader>\n                {titles}\n              </Header.Subheader>\n            </Header>\n            <List bulleted>\n              <List.Item><List.Header>Address</List.Header>{address}</List.Item>\n              <List.Item><List.Header>Phone</List.Header>{this.props.details.display_phone}</List.Item>\n              <List.Item><List.Header>Price</List.Header>{this.props.price}</List.Item>\n              <List.Item><List.Header>Rating</List.Header>{this.props.rating}</List.Item>\n            </List>\n            <Map latitude={this.props.details.coordinates.latitude} longitude={this.props.details.coordinates.longitude} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default BusinessDetail;","import React from 'react';\nimport { \n  Modal, \n  Icon, \n  Container,\n  Segment,\n  Header,\n  Divider,\n  Grid,\n} from 'semantic-ui-react';\nimport BusinessDetail from './BusinessDetail';\n\nclass EventCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      details: [],\n      loading: false,\n      isHovered: false,\n    };\n  }\n\n  getYelpDetailedUrl = (id) => {\n    return \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/\" + id;\n  }\n\n  searchHandler = () => {\n    const { eventInfo } = this.props;\n\n    this.setState({\n      loading: true,\n    }, () => {\n      fetch(this.getYelpDetailedUrl(eventInfo.id), {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          Authorization: 'Bearer ' + process.env.REACT_APP_YELP_API_KEY\n        }\n      }).then(response => response.json())\n        .then(data => {\n          this.setState({\n            details: data,\n            loading: false,\n          });\n        });\n    });\n  }\n\n  convertRating = () => {\n    const { eventInfo } = this.props;\n\n    var renderedStars = [];\n    var numStars = eventInfo.rating;\n    var addHalf = false;\n\n    if (!Number.isInteger(numStars)) {\n      numStars -= 0.5;\n      addHalf = true;\n    }\n\n    for (let i = 0; i < numStars; i++) {\n      renderedStars.push(<Icon name='star' color='yellow' />);\n    }\n\n    if (addHalf) {\n      renderedStars.push(<Icon name='star half' color='yellow' />);\n    }\n\n    return renderedStars\n  }\n\n  getRenderedEventCard = () => {\n    const { isHovered } = this.state;\n    const { eventInfo } = this.props;\n\n    return (\n      <Segment attached color=\"teal\" secondary={isHovered}>\n        <Header as='h2'>\n          {eventInfo.name}\n          <Divider hidden/>\n          <Header.Subheader>{eventInfo.categories.map(v => v.title).join(\", \")}</Header.Subheader>\n          <Header.Subheader>{eventInfo.location.display_address.join(\", \")}</Header.Subheader>\n          <Header.Subheader>{eventInfo.display_phone}</Header.Subheader>\n        </Header>\n      </Segment>\n    );\n  }\n\n  render() {\n    const { loading, details } = this.state;\n    const { eventInfo, eventDate, eventTime, deleteSelectedEvent } = this.props;\n\n    const renderedStars = this.convertRating();\n    const renderedEventCard = this.getRenderedEventCard();\n\n    return (\n      <>\n        <div style={{ marginRight: '10px' }}>\n          <Header as='h1' attached='top'>\n            <Grid columns=\"equal\">\n              <Grid.Row>\n                <Grid.Column>{eventTime}</Grid.Column>\n                <Grid.Column textAlign=\"right\" style={{marginRight: '-10px'}}>\n                  <Icon link name=\"delete\" color=\"red\" onClick={() => {deleteSelectedEvent(eventDate, eventTime)}}/>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Header>\n        </div>\n        <Modal trigger={\n          <div \n            style={{ marginBottom: '20px', marginRight: '10px' }} \n            onClick={this.searchHandler} \n            onMouseEnter={() => this.setState({ isHovered: true })}\n            onMouseLeave={() => this.setState({ isHovered: false })}\n          >\n            {renderedEventCard}\n          </div>\n        }>\n          <Modal.Header>{eventDate}, {eventTime}</Modal.Header>\n          <Modal.Content>\n            <BusinessDetail \n              loading={loading} \n              details={details} \n              price={\n                <Container style={{color:'green'}}>\n                  {eventInfo.price}\n                </Container>\n              } \n              rating={renderedStars}\n            />\n          </Modal.Content>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default EventCard;","import React from 'react';\nimport { \n  Accordion, \n  Icon, \n  Label, \n  Grid, \n} from 'semantic-ui-react';\nimport EventCard from './EventCard';\n\nclass DayCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeIndex: 0\n    };\n  }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  getRenderedEvents = () => {\n    const { eventsWithTimes, eventDate, deleteSelectedEvent } = this.props;\n\n    var renderedEvents = [];\n\n    const sortedEventsWithTimes = {};\n    Object.keys(eventsWithTimes).sort((time1, time2) => {\n      return new Date('1970/01/01 ' + time1) - new Date('1970/01/01 ' + time2);\n    }).forEach((key) => {\n      sortedEventsWithTimes[key] = eventsWithTimes[key];\n    });\n\n    for (const eventTime in sortedEventsWithTimes) {\n      const event = sortedEventsWithTimes[eventTime];\n      renderedEvents.push(<EventCard eventDate={eventDate} eventInfo={event.business} eventTime={eventTime} deleteSelectedEvent={deleteSelectedEvent} />);\n    }\n\n    return renderedEvents;\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n    const { eventDate } = this.props;\n\n    const renderedEvents = this.getRenderedEvents();\n\n    return (\n      <Accordion>\n        <Accordion.Title active={activeIndex === 0} index={0} onClick={this.handleClick}>\n          <Label.Group size=\"big\">\n            <Label> \n              <Icon name=\"dropdown\"/>\n              {eventDate}\n            </Label>\n            <Label color=\"teal\">\n              {renderedEvents.length}\n            </Label>\n          </Label.Group>\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 0}>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={1}>\n              </Grid.Column>\n              <Grid.Column width={15}>\n                {renderedEvents}  \n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Accordion.Content>\n      </Accordion>\n    );\n  }\n}\n\nexport default DayCard;","import React from 'react';\nimport DayCard from './DayCard';\nimport { \n  Header, \n  Container,\n  Grid,\n  Divider,\n} from 'semantic-ui-react';\n\nclass Calendar extends React.Component {\n  groupEvents = () => {\n    const { selected } = this.props;\n\n    const sortedEvents = selected.sort((event1, event2) => { return event1.date.getTime() - event2.date.getTime() });\n\n    var groupedEvents = {};\n\n    sortedEvents.forEach((event) => {\n      let eventDate = event.date.toDateString();\n      groupedEvents[eventDate] = {};\n    }); \n\n    sortedEvents.forEach((event) => {\n      let eventDate = event.date.toDateString();\n      groupedEvents[eventDate][event.time] = event;\n    });\n\n    return groupedEvents;\n  }\n\n  getRenderedDays = () => {\n    var renderedDays = [];\n    const groupedEvents = this.groupEvents();\n\n    for (const eventDate in groupedEvents) {\n      const eventsWithTimes = groupedEvents[eventDate];\n      renderedDays.push(<DayCard eventsWithTimes={eventsWithTimes} eventDate={eventDate} deleteSelectedEvent={this.props.deleteSelectedEvent} />);\n    }\n\n    return renderedDays;\n  }\n\n  getTimeRange = () => {\n    const { dates } = this.props;\n    \n    const startDate = dates[0];\n    const endDate = dates[dates.length - 1];\n\n    return {\n      start: startDate.toDateString(),\n      end: endDate.toDateString(),\n    }\n  }\n\n  render() {\n    const renderedDays = this.getRenderedDays();\n    const timeRange = this.getTimeRange();\n    const RESULTS_HEIGHT = (window.innerHeight - 68).toString() + 'px';\n\n    return (\n      <Container>\n        <div style={{ marginTop: '20px', marginBottom: '10px' }}>\n          <Grid container>\n            <Grid.Row>\n              <Grid.Column>\n                <Header size=\"huge\">Your Itinerary</Header>\n                <Grid>\n                  <Grid.Row>\n                    <Grid.Column width={2}>\n                      <Header size=\"small\">Start Date</Header> \n                    </Grid.Column>\n                    <Grid.Column width={14} style={{marginBottom: '10px'}}>\n                      <Header size=\"small\" color=\"grey\">{timeRange.start}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={2}>\n                      <Header size=\"small\">End Date</Header> \n                    </Grid.Column>\n                    <Grid.Column width={14}>\n                      <Header size=\"small\" color=\"grey\">{timeRange.end}</Header>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n        <Divider fitted />\n        <Container style={{ 'overflowY': 'auto', 'overflowX': 'hidden', height: RESULTS_HEIGHT, paddingLeft: '20px'}}>\n          {renderedDays}\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default Calendar;","import React from 'react';\nimport { \n  Segment, \n  Grid, \n  Image, \n  Button, \n  Icon, \n  Dropdown, \n} from 'semantic-ui-react';\nimport { TimeInput } from 'semantic-ui-calendar-react';\n\nclass SearchResultCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dateIndex: -1, \n      time: '',\n    }\n  }\n\n  handleSelect = (e) => {\n    const { dateIndex, time } = this.state;\n    const { addBusiness, business, dates } = this.props;\n\n    addBusiness(business, dates[dateIndex], time);\n  }\n\n  convertRating = () => {\n    const { business } = this.props;\n\n    var renderedStars = [];\n    var numStars = business.rating;\n    var addHalf = false;\n\n    if (!Number.isInteger(numStars)) {\n      numStars -= 0.5;\n      addHalf = true;\n    }\n\n    for (let i = 0; i < numStars; i++) {\n      renderedStars.push(<Icon name='star' color='yellow' />);\n    }\n\n    if (addHalf) {\n      renderedStars.push(<Icon name='star half' color='yellow' />);\n    }\n\n    return renderedStars;\n  }\n\n  render() {\n    const { time, dateIndex } = this.state;\n    const { business, dates } = this.props;\n\n    const localeDates = dates.map(d => d.toLocaleDateString());\n    const renderedStars = this.convertRating();\n\n    return (\n      <Segment raised style={{ marginRight: '10px' }}>\n        <Grid celled>\n          <Grid.Row>\n            <Grid.Column width={6} >\n              <Image src={business.image_url} style={{ objectFit: \"cover\", width: \"100%\", height: \"200px\" }} />\n            </Grid.Column>\n            <Grid.Column width={10}>\n              <h3>{business.name}</h3>\n              <div style={{ float: \"left\", width:\"50%\" }}>\n                <span>{business.categories.map(v => v.title).join(\", \")}</span> <br />\n                {business.price && \n                  <>\n                    <b style={{color: \"green\"}}>{business.price}</b><br/>\n                    {renderedStars}\n                  </>\n                }\n                <div style={{ position: \"absolute\", bottom: '0', width:\"50%\"}}>\n                {business.display_phone} <br />\n                {business.location.display_address.join(\", \")}\n                <br /><br />\n                </div>\n              </div>\n              <div style={{ float: \"right\" }}>\n                {business.review_count} reviews \n                <br />\n                <br />\n                <Dropdown\n                  placeholder='Select Date'\n                  fluid\n                  selection\n                  options={localeDates.map((v, i) => ({ key: business.id + v, text: v, value: i }))}\n                  style={{ marginBottom: \"5px\" }}\n                  onChange={(e, data) => this.setState({ dateIndex: data.value })}\n                />\n                <TimeInput \n                  name=\"time\"\n                  value={time}\n                  onChange={(e, data) => this.setState({ time: data.value })}\n                  clearable\n                  onClear={() => {this.setState({ time: '' })}}\n                  timeFormat=\"AMPM\"\n                  icon={false}\n                  placeholder=\"Select Time\"\n                  style={{ marginBottom: \"5px\" }}\n                />\n                <Button icon color=\"teal\" labelPosition=\"right\" disabled={dateIndex === -1 || time === ''} onClick={this.handleSelect}>\n                  Add to plan\n                  <Icon name=\"add\"></Icon>\n                </Button>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    )\n  }\n}\n\n\nexport default SearchResultCard;","import React from 'react';\nimport { \n  Input, \n  Container, \n  Button, \n  Grid, \n  Divider, \n  Header, \n  Placeholder, \n  Segment, \n  Dimmer, \n  Loader,\n} from 'semantic-ui-react';\nimport SearchResultCard from './SearchResultCard';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      query: '', \n      results: [],\n      loading: false,\n    };\n  }\n\n  getSelectedLocation = () => {\n    return this.state.location ? this.state.location : this.props.location;\n  }\n\n  getYelpURL = (query) => {\n    const location = this.getSelectedLocation();\n    return 'https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=' + query + '&latitude=' + location.lat.toString() + '&longitude=' + location.lon.toString();\n  }\n\n  searchHandler = (event) => {\n    const { query } = this.state;\n    this.setState({\n      loading: true,\n    }, () => {\n      fetch(this.getYelpURL(query), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        Authorization: 'Bearer ' + process.env.REACT_APP_YELP_API_KEY,\n      }\n    }).then(response => response.json())\n      .then(data => {\n        this.setState({\n          results: data.businesses,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  clearResults = () => {\n    this.setState({\n      query: '',\n      results: [],\n    });\n  }\n\n  getPlaceholderCards = () => {\n    let cards = [];\n    for (let i = 0; i < 20; i++) {\n      cards.push(\n        <Segment key={i} raised style={{ marginRight: '10px' }}>\n          <Grid celled>\n            <Grid.Row>\n              <Grid.Column width={6} >\n                <Placeholder>\n                  <Placeholder.Image style={{ objectFit: \"cover\", width: \"100%\", height: \"200px\" }}/>\n                </Placeholder>\n              </Grid.Column>\n              <Grid.Column width={10}>\n                  <Dimmer active inverted>\n                    <Loader inverted>Loading</Loader>\n                  </Dimmer>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      );\n    }\n    return cards;\n  }\n\n  render() {\n    const { query, results, loading } = this.state;\n    const { dates, addBusiness } = this.props;\n\n    const RESULTS_HEIGHT = (window.innerHeight - 68).toString() + 'px';\n    const renderedLoadingResults = this.getPlaceholderCards();\n    const location = this.getSelectedLocation();\n\n    return (\n      <Container>\n        <div style={{ marginTop: '20px', marginBottom: '10px' }}>\n          <Grid columns=\"equal\">\n            <Grid.Row>\n              <Grid.Column width={12}>\n                <Header size=\"huge\">\n                  Things to do around {location.name}\n                </Header>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <Input \n                  style={{ marginRight: '10px', marginTop: '10px' }}\n                  action={{\n                    color: 'teal',\n                    icon: 'search',\n                    onClick: this.searchHandler,\n                    disabled: !query,\n                  }}\n                  value={query}\n                  placeholder={\"Search\"}\n                  onChange={e => { this.setState({ query: e.target.value }) }} \n                />\n                <Button\n                  style={{ marginRight: '10px', marginTop: '10px' }}\n                  icon=\"idea\"\n                  labelPosition=\"right\"\n                  color=\"teal\"\n                  content=\"What's popular?\"\n                  onClick={() =>\n                    this.setState({\n                      query: '',\n                    }, this.searchHandler)\n                  }\n                />\n                {results && results[0] &&\n                  <Button\n                    style={{ marginRight: '10px', marginTop: '10px' }}\n                    icon=\"remove circle\"\n                    labelPosition=\"right\"\n                    color=\"teal\"\n                    content=\"Clear results\"\n                    onClick={this.clearResults}\n                  />\n                }\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n        <Divider fitted />\n        {loading && renderedLoadingResults}\n        {results && results[0] && \n          <Container style={{ overflow: 'auto', maxHeight: RESULTS_HEIGHT, paddingTop: '10px', paddingBottom: '10px' }}>\n            <Container>\n              {results.map((value, i) => (\n                <SearchResultCard key={i.toString()} business={value} dates={dates} addBusiness={addBusiness} />\n              ))}\n            </Container>\n          </Container>\n        }\n      </Container>\n    )\n  }\n}\n\nexport default Search;","import React from 'react';\nimport { Segment, Grid, Button, Form, Header } from 'semantic-ui-react';\nimport { DatesRangeInput } from 'semantic-ui-calendar-react';\nimport Geosuggest from 'react-geosuggest';\nimport { Link } from 'react-router-dom';\nimport BackgroundSlider from 'react-background-slider';\nimport travel1 from '../images/travel1.jpg';\nimport travel2 from '../images/travel2.jpg';\nimport travel3 from '../images/travel3.jpg';\nimport travel4 from '../images/travel4.jpg';\nimport travel5 from '../images/travel5.jpg';\nimport travel6 from '../images/travel6.jpg';\nimport travel7 from '../images/travel7.jpg';\n\nclass StartMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datesRange: '',\n      location: null,\n      dateCheck: true,\n      placeCheck: true,\n    }\n  }\n\n  handleChange = (event, { name, value }) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value, \n        dateCheck: value.split(\" - \").length < 2 ? true : value.split(\" - \")[1].length === 0 });\n    }\n  }\n\n  getDates = (startDate, endDate) => {\n    let dates = [],\n        currentDate = startDate,\n        addDays = function(days) {\n          let date = new Date(this.valueOf());\n          date.setDate(date.getDate() + days);\n          return date;\n        };\n    while (currentDate <= endDate) {\n      dates.push(currentDate);\n      currentDate = addDays.call(currentDate, 1);\n    }\n    return dates;\n  }\n\n  getBackground = () => {\n    const slideImages = [\n      travel1,\n      travel2,\n      travel3,\n      travel4,\n      travel5,\n      travel6,\n      travel7,\n    ];\n\n    return (\n      <BackgroundSlider\n        images={slideImages}\n        duration={7} \n        transition={2} \n      />\n    );\n  }\n\n  handleStartPlan = (e) => {\n    const { datesRange, location } = this.state;\n    const { startPlan } = this.props;\n\n    let dateStrings = datesRange.split(' - ');\n    function format(s) {\n      let l = s.split('-');\n      let temp = l[0];\n      l[0] = l[1];\n      l[1] = temp;\n      return l.join('-');\n    }\n    let start = new Date(format(dateStrings[0]));\n    let end = new Date(format(dateStrings[1]));\n\n    let dates = this.getDates(start, end);\n    startPlan(location, dates);\n  }\n\n  stripLocationName = (location) => {\n    return location.split(',')[0];\n  }\n\n  render() {\n    const { datesRange, dateCheck, placeCheck } = this.state;\n    const renderedBackground = this.getBackground();\n\n    return (\n      <div style={{height: '100vh'}}>\n        {renderedBackground}\n        <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Segment>\n              <Header>Plan Your Next Adventure.</Header>\n              <Form size={\"large\"}>\n                <DatesRangeInput\n                  name=\"datesRange\"\n                  placeholder=\"From - To\"\n                  value={datesRange}\n                  iconPosition=\"left\"\n                  onChange={this.handleChange}\n                />\n                <Geosuggest onSuggestSelect={selected => {\n                  if (selected) {\n                    this.setState({\n                      placeCheck: false, \n                      location: {\n                        lat: selected.location.lat, \n                        lon: selected.location.lng,\n                        name: this.stripLocationName(selected.label),\n                      }\n                    })\n                  }\n                }}/>\n                <br/>\n                <Button as={Link} to=\"/plan\" onClick={this.handleStartPlan} disabled={dateCheck || placeCheck} color='teal' fluid size='large'>\n                  Start Planning!\n                </Button>\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default StartMenu;","import React from 'react';\nimport Calendar from './Calendar';\nimport Search from './Search';\nimport { Grid } from 'semantic-ui-react'\nimport StartMenu from './StartMenu';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass Planner extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedEvents: [],\n      location: {},\n      dates: [],\n    }\n  }\n\n  addBusinessToPlanner = (business, date, time) => {\n    const { selectedEvents } = this.state; \n    this.setState({\n      selectedEvents: [...selectedEvents, { business: business, date: date, time: time }],\n    });\n  }\n\n  deleteSelectedEvent = (eventDate, eventTime) => {\n    const { selectedEvents } = this.state; \n    var selectedEventsCopy = [...selectedEvents];\n\n    var indexToRemove = -1;\n    selectedEventsCopy.forEach((selectedEvent, i) => {\n      if (selectedEvent.date.toDateString() === eventDate && selectedEvent.time === eventTime) {\n        indexToRemove = i;\n      }\n    });\n\n    if (indexToRemove > -1) {\n      selectedEventsCopy.splice(indexToRemove, 1);\n      this.setState({\n        selectedEvents: selectedEventsCopy,\n      });\n    }\n  }\n\n  startPlan = (location, dates) => {\n    this.setState({ location: location, dates: dates });\n  }\n\n  render() {\n    const { selectedEvents, dates, location } = this.state; \n\n    return (\n      <Router>\n        <Route exact path=\"/\" render={() => <StartMenu startPlan={this.startPlan} />}/>\n        <Route path=\"/plan\" render={() => (\n          <Grid columns={2} divided style={{height: '100vh'}}>\n            <Grid.Row>\n              <Grid.Column>\n                <Calendar dates={dates} selected={selectedEvents} deleteSelectedEvent={this.deleteSelectedEvent}/>\n              </Grid.Column>\n              <Grid.Column>\n                <Search dates={dates} location={location} addBusiness={this.addBusinessToPlanner} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        )}/>\n      </Router>\n    )\n  }\n}\n\nexport default Planner;","import React from 'react';\nimport Planner from './components/Planner';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Planner />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}