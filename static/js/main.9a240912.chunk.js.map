{"version":3,"sources":["images/travel1.jpg","images/travel2.jpg","images/travel3.jpg","images/travel4.jpg","images/travel5.jpg","images/travel6.jpg","images/travel7.jpg","components/Map.jsx","components/BusinessDetail.jsx","components/EventCard.jsx","components/Day.jsx","components/GoogleExportButton.jsx","components/Calendar.jsx","components/SearchResultCard.jsx","components/Search.jsx","components/StartMenu.jsx","components/Planner.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MyMapComponent","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","isMarkerShown","position","Map","this","latitude","longitude","loadingElement","style","height","containerElement","mapElement","Component","BusinessDetail","getRenderedPhotos","details","photos","map","photo","Image","src","verticalAlign","width","getAddress","full_address","location","display_address","address","i","length","push","getCategories","categories","titles","categoryTitle","title","getOperatingDays","availabilities","hours","operatingDays","numToDay","Array","forEach","availability","operatingDay","day","convert24to12","hour24","hour","parseInt","slice","minutes","amOrPm","toString","getFormattedHoursString","start","end","open","close","getFormattedHours","daysToHours","Object","keys","formattedHoursString","operatingHours","hoursString","formattedHours","List","Item","getRenderedReviews","reviewData","convertRating","renderedReviews","reviews","review","userRating","rating","timeCreated","Date","time_created","toDateString","Feed","Event","Label","user","image_url","objectFit","Content","Summary","name","Extra","text","loading","price","Container","textAlign","Icon","size","renderedPhotos","isCurrentlyOpen","is_open_now","Grid","celled","columns","Row","Column","Header","as","infinite","dots","centered","draggable","arrowLeft","arrowRight","addArrowClickHandler","relaxed","display_phone","color","coordinates","React","EventCard","getYelpDetailsUrl","id","getYelpReviewsUrl","searchHandler","businessInfo","setState","fetch","method","headers","Authorization","then","response","json","data","renderedStars","addHalf","Number","isInteger","getRenderedEventCard","isHovered","state","Segment","attached","secondary","Subheader","v","join","date","startTime","endTime","deleteSelectedEvent","renderedEventCard","marginRight","link","onClick","Modal","trigger","marginBottom","onMouseEnter","onMouseLeave","Day","handleClick","e","titleProps","index","newIndex","activeIndex","getRenderedEvents","eventsWithTimes","orderedEventsWithTimes","sort","startTime1","startTime2","renderedEvents","endTime1","endTime2","addedEvent","Accordion","Title","active","Group","GoogleExportButton","initClient","window","gapi","client","init","apiKey","discoveryDocs","clientId","scope","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","exportToCalendar","batch","newBatch","formatEvents","event","add","calendar","events","insert","exported","setTimeout","handleAuthClick","signIn","selected","formattedEvents","business","eventStart","toISOString","eventEnd","formattedEvent","load","Button","icon","labelPosition","floated","disabled","Calendar","getRenderedDays","renderedDays","orderedSelectedEvents","date1","date2","getTimeRange","dates","startDate","endDate","timeRange","RESULTS_HEIGHT","innerHeight","marginTop","container","stackable","Divider","fitted","paddingLeft","Ghost","mood","SearchResultCard","handleSelect","dateIndex","addBusiness","numStars","localeDates","d","toLocaleDateString","raised","float","review_count","bottom","Dropdown","placeholder","fluid","selection","options","key","value","onChange","clearable","onClear","timeFormat","Search","getSelectedLocation","getYelpURL","query","lon","results","businesses","clearResults","getPlaceholderCards","cards","Placeholder","Dimmer","inverted","Loader","renderedLoadingResults","Input","action","target","onKeyPress","content","Backpack","overflow","maxHeight","paddingTop","paddingBottom","StartMenu","handleChange","hasOwnProperty","split","getDates","currentDate","addDays","days","valueOf","setDate","getDate","call","getBackground","slideImages","travel1","travel2","travel3","travel4","travel5","travel6","travel7","images","duration","transition","handleStartPlan","datesRange","startPlan","dateStrings","format","s","l","temp","stripLocationName","dateCheck","placeCheck","renderedBackground","maxWidth","Form","iconPosition","onSuggestSelect","label","Link","to","Planner","addBusinessToPlanner","selectedEvents","selectedEventsCopy","dateKey","exact","path","render","divided","App","className","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a240912.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/travel1.eda7aff3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel2.f85b1e62.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel3.373599b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel4.06f3c00f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel5.3b3c1978.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel6.ca2510a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel7.eba269f6.jpg\";","import React from 'react';\nimport { Component } from 'react';\nimport { withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\n\nconst MyMapComponent = withGoogleMap((props) =>\n  <GoogleMap\n    defaultZoom={18}\n    defaultCenter={{ lat: props.lat, lng: props.lng }}\n  >\n    {props.isMarkerShown && <Marker position={{ lat: props.lat, lng: props.lng }} />}\n  </GoogleMap>\n);\n\nclass Map extends Component {\n  render() {\n    const { latitude, longitude } = this.props;\n    return (\n      <MyMapComponent \n        isMarkerShown \n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `400px` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n        lat={latitude}\n        lng={longitude}\n      />\n    );\n  }\n}\n\nexport default Map;","import React from 'react';\nimport { Grid, Image, Icon, Header, List, Container, Feed } from 'semantic-ui-react';\nimport Map from './Map';\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nclass BusinessDetail extends React.Component {\n  getRenderedPhotos = () => {\n    const { details } = this.props;\n    let photos = details.photos;\n    let renderedPhotos = photos.map((photo) =>\n      <Image src={photo} verticalAlign='middle' style={{height: '400px', width: 'auto'}}/>\n    );\n    return renderedPhotos;\n  }\n\n  getAddress = () => {\n    const { details } = this.props;\n    let full_address = details.location.display_address;\n    let address = [];\n    for (let i = 0; i < full_address.length - 1; i++) {\n      address.push(full_address[i]);\n      address.push(\", \");\n    }\n    address.push(full_address[full_address.length - 1]);\n    return address;\n  }\n\n  getCategories = () => {\n    const { details } = this.props;\n    let categories = details.categories;\n    let titles = [];\n    for (let i = 0; i < categories.length - 1; i++) {\n      let categoryTitle = categories[i].title;\n      titles.push(categoryTitle);\n      titles.push(\", \");\n    }\n    titles.push(categories[categories.length - 1].title);\n    return titles;\n  }\n\n  getOperatingDays = () => {\n    const { details } = this.props;\n    const availabilities = details.hours[0]['open'];\n\n    var operatingDays = {\n      'Monday': [],\n      'Tuesday': [],\n      'Wednesday': [],\n      'Thursday': [],\n      'Friday': [],\n      'Saturday': [],\n      'Sunday': [],\n    };\n\n    var numToDay = new Array(7);\n    numToDay[0] = 'Monday';\n    numToDay[1] = 'Tuesday';\n    numToDay[2] = 'Wednesday';\n    numToDay[3] = 'Thursday';\n    numToDay[4] = 'Friday';\n    numToDay[5] = 'Saturday';\n    numToDay[6] = 'Sunday';\n\n    availabilities.forEach(availability => {\n      const operatingDay = numToDay[availability.day];\n      operatingDays[operatingDay].push(availability);\n    });\n    \n    return operatingDays;\n  }\n\n  convert24to12 = (hour24) => {\n    var hour = parseInt(hour24.slice(0, 2));\n    const minutes = hour24.slice(2, 5);\n    var amOrPm = 'AM';\n    if (hour > 12) {\n      hour %= 12;\n      amOrPm = 'PM';\n    }\n    return `${hour.toString()}:${minutes} ${amOrPm}`;\n  }\n\n  getFormattedHoursString = (start, end) => {\n    const open = this.convert24to12(start);\n    const close = this.convert24to12(end);\n    return `${open} - ${close}`;\n  }\n\n  getFormattedHours = () => {\n    const operatingDays = this.getOperatingDays();\n    var daysToHours = {\n      'Monday': '',\n      'Tuesday': '',\n      'Wednesday': '',\n      'Thursday': '',\n      'Friday': '',\n      'Saturday': '',\n      'Sunday': '',\n    };\n\n    Object.keys(operatingDays).forEach(day => {\n      const operatingHours = operatingDays[day];\n      var hoursString = '';\n      var availability;\n      var formattedHoursString;\n      if (operatingHours.length === 0) {\n        hoursString = 'CLOSED';\n      } else {\n        for (let i = 0; i < operatingHours.length - 1; i++) {\n          availability = operatingHours[i];\n          formattedHoursString = this.getFormattedHoursString(availability.start, availability.end);\n          hoursString += `${formattedHoursString}, `;\n        }\n        availability = operatingHours[operatingHours.length - 1];\n        formattedHoursString = this.getFormattedHoursString(availability.start, availability.end);\n        hoursString += `${formattedHoursString}`;\n      }\n      daysToHours[day] = hoursString;\n    });\n\n    var formattedHours = [];\n    Object.keys(daysToHours).forEach(day => {\n      formattedHours.push(<List.Item>{`${day} ${daysToHours[day]}`}</List.Item>);\n    });\n\n    return formattedHours;\n  }\n\n  getRenderedReviews = () => {\n    const { reviewData, convertRating } = this.props;\n\n    var renderedReviews = [];\n    reviewData.reviews.forEach(review => {\n      const userRating = convertRating(review.rating);\n      const timeCreated = new Date(review.time_created).toDateString();\n\n      renderedReviews.push(\n        <Feed.Event>\n          <Feed.Label>\n            <Image src={review.user.image_url} style={{ objectFit: 'cover', width: '35px', height: '35px'}} />\n          </Feed.Label>\n          <Feed.Content>\n            <Feed.Summary>\n              {review.user.name} {userRating} \n              <Feed.Date>{timeCreated}</Feed.Date>\n            </Feed.Summary>\n            <Feed.Extra text>{review.text}</Feed.Extra>\n          </Feed.Content>\n        </Feed.Event>\n      );\n    });\n\n    return renderedReviews;\n  }\n\n  render() {\n    const { details, loading, price, convertRating } = this.props;\n\n    if (loading) {\n      return <Container textAlign='center'><Icon name='circle notch' loading size='huge'/></Container>\n    }\n\n    const rating = convertRating(details.rating);\n    const titles = this.getCategories();\n    const renderedPhotos = this.getRenderedPhotos();\n    const address = this.getAddress();\n    const formattedHours = this.getFormattedHours();\n    const isCurrentlyOpen = details.hours[0].is_open_now;\n    const renderedReviews = this.getRenderedReviews();\n\n    return (\n      <Grid celled='internally' columns='equal'>\n        <Grid.Row>\n          <Grid.Column>\n            <Header as='h1'>\n              <Icon name='photo' />\n              <Header.Content>Photos</Header.Content>\n            </Header>\n            <Carousel\n              infinite\n              dots\n              centered\n              draggable={false}\n              arrowLeft={<Icon size='big' name='arrow left' />}\n              arrowRight={<Icon size='big' name='arrow right' />}\n              addArrowClickHandler\n            >\n              {renderedPhotos}\n            </Carousel>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={6}>\n            <Header as='h1'>\n              <Icon name='info circle' />\n              <Header.Content>Basic Information</Header.Content>\n            </Header>\n            <List relaxed>\n              <List.Item><List.Header>Address</List.Header>{address}</List.Item>\n              <List.Item><List.Header>Phone</List.Header>{details.display_phone}</List.Item>\n              <List.Item>\n                <List.Header>\n                  <span>Regular Hours {isCurrentlyOpen ? <div style={{color:'green'}}>Currently Open</div> : <div style={{color:'red'}}>Currently Closed</div>}</span>\n                </List.Header>\n                {formattedHours}\n              </List.Item>\n              <List.Item><List.Header>Price</List.Header>{price}</List.Item>\n              <List.Item><List.Header>Rating</List.Header>{rating}</List.Item>\n              <List.Item><List.Header>Categories</List.Header>{titles}</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Header as='h1'>\n              <Icon name='users' />\n              <Header.Content>Highlighted Reviews</Header.Content>\n            </Header>\n            <Feed>\n              {renderedReviews}\n            </Feed>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <Header as='h1'>\n              <Icon name='map' />\n              <Header.Content>Map</Header.Content>\n            </Header>\n            <Map latitude={details.coordinates.latitude} longitude={details.coordinates.longitude} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default BusinessDetail;","import React from 'react';\nimport { \n  Modal, \n  Icon, \n  Container,\n  Segment,\n  Header,\n  Grid,\n} from 'semantic-ui-react';\nimport BusinessDetail from './BusinessDetail';\n\nclass EventCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      details: [],\n      reviewData: [],\n      loading: false,\n      isHovered: false,\n    };\n  }\n\n  getYelpDetailsUrl = (id) => {\n    return `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${id}`;\n  }\n\n  getYelpReviewsUrl = (id) => {\n    return `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${id}/reviews`;\n  }\n\n  searchHandler = () => {\n    const { businessInfo } = this.props;\n\n    this.setState({\n      loading: true,\n    }, () => {\n      fetch(this.getYelpDetailsUrl(businessInfo.id), {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          Authorization: 'Bearer ' + process.env.REACT_APP_YELP_API_KEY\n        }\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          details: data,\n        });\n      })\n      .then(() => {\n        fetch(this.getYelpReviewsUrl(businessInfo.id), {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            Authorization: 'Bearer ' + process.env.REACT_APP_YELP_API_KEY\n          }\n        })\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            reviewData: data,\n            loading: false,\n          });\n        });\n      });\n    });\n  }\n\n  convertRating = (rating) => {\n    var renderedStars = [];\n    var addHalf = false;\n\n    if (!Number.isInteger(rating)) {\n      rating -= 0.5;\n      addHalf = true;\n    }\n\n    for (let i = 0; i < rating; i++) {\n      renderedStars.push(<Icon name='star' color='yellow' />);\n    }\n\n    if (addHalf) {\n      renderedStars.push(<Icon name='star half' color='yellow' />);\n    }\n\n    return renderedStars\n  }\n\n  getRenderedEventCard = () => {\n    const { isHovered } = this.state;\n    const { businessInfo } = this.props;\n\n    return (\n      <Segment attached color=\"teal\" secondary={isHovered}>\n        <Header as='h2'>\n          {businessInfo.name}\n          <Header.Subheader>{businessInfo.categories.map(v => v.title).join(\", \")}</Header.Subheader>\n          <Header.Subheader>{businessInfo.location.display_address.join(\", \")}</Header.Subheader>\n          <Header.Subheader>{businessInfo.display_phone}</Header.Subheader>\n        </Header>\n      </Segment>\n    );\n  }\n\n  render() {\n    const { loading, details, reviewData } = this.state;\n    const { businessInfo, date, startTime, endTime, deleteSelectedEvent } = this.props;\n\n    const renderedEventCard = this.getRenderedEventCard();\n\n    return (\n      <>\n        <div style={{ marginRight: '10px' }}>\n          <Header as='h1' attached='top'>\n            <Grid columns=\"equal\">\n              <Grid.Row>\n                <Grid.Column>{startTime} - {endTime}</Grid.Column>\n                <Grid.Column textAlign=\"right\" style={{marginRight: '-10px'}}>\n                  <Icon link name=\"delete\" color=\"red\" onClick={() => { deleteSelectedEvent(date, startTime, endTime) }}/>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Header>\n        </div>\n        <Modal trigger={\n          <div \n            style={{ marginBottom: '20px', marginRight: '10px' }} \n            onClick={this.searchHandler} \n            onMouseEnter={() => this.setState({ isHovered: true })}\n            onMouseLeave={() => this.setState({ isHovered: false })}\n          >\n            {renderedEventCard}\n          </div>\n        }>\n          <Modal.Header> \n            <Header as='h1'>\n              <Header.Content>{businessInfo.name}</Header.Content>\n              <Header.Subheader>\n                {date}, {startTime} - {endTime}\n              </Header.Subheader>\n            </Header>\n          </Modal.Header>\n          <Modal.Content>\n            <BusinessDetail \n              loading={loading} \n              details={details}\n              reviewData={reviewData} \n              price={\n                <Container style={{color:'green'}}>\n                  {businessInfo.price}\n                </Container>\n              } \n              convertRating={this.convertRating}\n            />\n          </Modal.Content>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default EventCard;","import React from 'react';\nimport { \n  Accordion, \n  Icon, \n  Label, \n  Grid, \n} from 'semantic-ui-react';\nimport EventCard from './EventCard';\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeIndex: 0\n    };\n  }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  getRenderedEvents = () => {\n    const { eventsWithTimes, date, deleteSelectedEvent } = this.props;\n\n    const orderedEventsWithTimes = {};\n    Object.keys(eventsWithTimes).sort((startTime1, startTime2) => {\n      return new Date('1970/01/01 ' + startTime1) - new Date('1970/01/01 ' + startTime2);\n    }).forEach((startTime) => {\n      orderedEventsWithTimes[startTime] = eventsWithTimes[startTime];\n    });\n\n    var renderedEvents = [];\n    for (const startTime in orderedEventsWithTimes) {\n      const orderedEndTimes = Object.keys(orderedEventsWithTimes[startTime]).sort((endTime1, endTime2) => {\n        return new Date('1970/01/01 ' + endTime1) - new Date('1970/01/01 ' + endTime2);\n      });\n\n      orderedEndTimes.forEach((endTime) => {\n        const addedEvent = orderedEventsWithTimes[startTime][endTime];\n        renderedEvents.push(\n          <EventCard \n            date={date} \n            businessInfo={addedEvent} \n            startTime={startTime} \n            endTime={endTime} \n            deleteSelectedEvent={deleteSelectedEvent} \n          />\n        );\n      });\n    }\n\n    return renderedEvents;\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n    const { date } = this.props;\n\n    const renderedEvents = this.getRenderedEvents();\n\n    return (\n      <Accordion>\n        <Accordion.Title active={activeIndex === 0} index={0} onClick={this.handleClick}>\n          <Label.Group size=\"big\">\n            <Label> \n              <Icon name=\"dropdown\"/>\n              {date}\n            </Label>\n            <Label color=\"teal\">\n              {renderedEvents.length}\n            </Label>\n          </Label.Group>\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 0}>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={2}>\n              </Grid.Column>\n              <Grid.Column width={12}>\n                {renderedEvents}  \n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Accordion.Content>\n      </Accordion>\n    );\n  }\n}\n\nexport default Day;","import React from 'react';\nimport { \n  Button, \n  Icon,\n} from 'semantic-ui-react';\n\nclass GoogleExportButton extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      isSignedIn: false,\n      loading: false,\n      exported: false,\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', this.initClient);\n  }\n\n  initClient = () => {\n    window.gapi.client.init({\n      apiKey: 'AIzaSyCZX3V4y7EDiZTfiGi6Ur8e_8c-e4Fz95s',\n      discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'],\n      clientId: '383149879152-9ado61dvk1dtvujfnda604agm88rfnll.apps.googleusercontent.com',\n      scope: 'https://www.googleapis.com/auth/calendar',\n    }).then(() => {\n      window.gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus);\n      this.updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n    });\n  }\n\n  exportToCalendar = () => {\n    var batch = window.gapi.client.newBatch();\n    const formattedEvents = this.formatEvents();\n    formattedEvents.forEach((event) => {\n      batch.add(window.gapi.client.calendar.events.insert({\n        'calendarId': 'primary',\n        'resource': event,\n      }));\n    });\n\n    batch.then(() => {\n      this.setState({\n        loading: false,\n        exported: true,\n      });\n\n      setTimeout(() => {\n        this.setState({\n          exported: false,\n        });\n      }, 2000);\n    });\n  }\n\n  updateSigninStatus = (isSignedIn) => {\n    this.setState({\n      isSignedIn: isSignedIn,\n    });\n  }\n\n  handleAuthClick = () => {\n    const { isSignedIn } = this.state;\n    \n    if (!isSignedIn) {\n      window.gapi.auth2.getAuthInstance().signIn().then(() => {\n        this.setState({\n          loading: true,\n        }, this.exportToCalendar);\n      });\n    } else {\n      this.setState({\n        loading: true,\n      }, this.exportToCalendar);\n    }\n  }\n\n  formatEvents = () => {\n    const { selected } = this.props;\n    var formattedEvents = [];\n\n    for (const date in selected) {\n      for (const startTime in selected[date]) {\n        for (const endTime in selected[date][startTime]) {\n          const business = selected[date][startTime][endTime];\n          const eventStart = new Date(`${date} ${startTime}`).toISOString();\n          const eventEnd = new Date(`${date} ${endTime}`).toISOString();\n          const formattedEvent = {\n            'summary': business.name,\n            'location': business.location.display_address.join(\", \"),\n            'start': {\n              'dateTime': eventStart,\n            },\n            'end': {\n              'dateTime': eventEnd,\n            },\n          };\n          formattedEvents.push(formattedEvent);\n        }\n      }\n    }\n\n    return formattedEvents;\n  }\n\n  render() {\n    const { loading, exported } = this.state;\n    const { selected } = this.props;\n\n    return (\n      <Button \n        icon \n        loading={loading} \n        labelPosition='left' \n        color='teal' \n        floated='right' \n        onClick={this.handleAuthClick} \n        disabled={Object.keys(selected).length === 0}\n      >\n        <Icon name={exported ? 'checkmark' : 'upload'} />\n        Export Itinerary\n      </Button>\n    );\n  }\n}\n\nexport default GoogleExportButton;","import React from 'react';\nimport Day from './Day';\nimport GoogleExportButton from './GoogleExportButton';\nimport { \n  Header, \n  Container,\n  Grid,\n  Divider,\n  List,\n} from 'semantic-ui-react';\nimport { Ghost } from 'react-kawaii';\n\nclass Calendar extends React.Component {\n  getRenderedDays = () => {\n    const { selected, deleteSelectedEvent } = this.props;\n\n    var renderedDays = [];\n    var orderedSelectedEvents = {};\n    Object.keys(selected).sort((date1, date2) => { return new Date(date1) - new Date(date2); }).forEach((date) => {\n      orderedSelectedEvents[date] = selected[date];\n    });\n\n    for (const date in orderedSelectedEvents) {\n      const eventsWithTimes = orderedSelectedEvents[date];\n      if (Object.keys(eventsWithTimes).length > 0) {\n        renderedDays.push(\n          <Day \n            eventsWithTimes={eventsWithTimes} \n            date={date} \n            deleteSelectedEvent={deleteSelectedEvent} \n          />\n        );\n      }\n    }\n\n    return renderedDays;\n  }\n\n  getTimeRange = () => {\n    const { dates } = this.props;\n    \n    const startDate = dates[0];\n    const endDate = dates[dates.length - 1];\n\n    return {\n      start: startDate.toDateString(),\n      end: endDate.toDateString(),\n    }\n  }\n\n  render() {\n    const { selected } = this.props;\n    const renderedDays = this.getRenderedDays();\n    const timeRange = this.getTimeRange();\n    const RESULTS_HEIGHT = (window.innerHeight - 68).toString() + 'px';\n\n    return (\n      <Container>\n        <div style={{ marginTop: '20px', marginBottom: '10px' }}>\n          <Grid container stackable columns=\"equal\">\n            <Grid.Row>\n              <Grid.Column>\n                <Header size=\"huge\">\n                  Your Itinerary\n                </Header>\n                <List>\n                  <List.Item>\n                    <List.Header size=\"small\">Start Date</List.Header>\n                    {timeRange.start}\n                  </List.Item>\n                  <List.Item>\n                    <List.Header size=\"small\">End Date</List.Header>\n                    {timeRange.end}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column verticalAlign=\"bottom\">\n                <GoogleExportButton selected={selected} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n        <Divider fitted />\n        <Container style={{ 'overflowY': 'auto', 'overflowX': 'hidden', height: RESULTS_HEIGHT, paddingLeft: '20px'}}>\n          {renderedDays.length === 0 && \n            <Container textAlign='center' style={{marginTop: '25%'}}>\n              <Ghost \n                size={200} \n                mood=\"sad\" \n                color=\"#E0E4E8\"\n              />\n              <Header as='h1'>\n                No events so far\n                <Header.Subheader>\n                  Add an event on the right and it will show up here.\n                </Header.Subheader>\n              </Header>\n            </Container>\n          }\n          {renderedDays}\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default Calendar;","import React from 'react';\nimport { \n  Segment, \n  Grid, \n  Image, \n  Button, \n  Icon, \n  Dropdown, \n} from 'semantic-ui-react';\nimport { TimeInput } from 'semantic-ui-calendar-react';\n\nclass SearchResultCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dateIndex: -1, \n      startTime: '',\n      endTime: '',\n    }\n  }\n\n  handleSelect = (e) => {\n    const { dateIndex, startTime, endTime } = this.state;\n    const { addBusiness, business, dates } = this.props;\n\n    addBusiness(business, dates[dateIndex], startTime, endTime);\n  }\n\n  convertRating = () => {\n    const { business } = this.props;\n\n    var renderedStars = [];\n    var numStars = business.rating;\n    var addHalf = false;\n\n    if (!Number.isInteger(numStars)) {\n      numStars -= 0.5;\n      addHalf = true;\n    }\n\n    for (let i = 0; i < numStars; i++) {\n      renderedStars.push(<Icon name='star' color='yellow' />);\n    }\n\n    if (addHalf) {\n      renderedStars.push(<Icon name='star half' color='yellow' />);\n    }\n\n    return renderedStars;\n  }\n\n  render() {\n    const { startTime, endTime, dateIndex } = this.state;\n    const { business, dates } = this.props;\n\n    const localeDates = dates.map(d => d.toLocaleDateString());\n    const renderedStars = this.convertRating();\n\n    return (\n      <Segment raised style={{ marginRight: '10px' }}>\n        <Grid celled>\n          <Grid.Row>\n            <Grid.Column width={6} >\n              <Image src={business.image_url} style={{ objectFit: \"cover\", width: \"100%\", height: \"200px\" }} />\n            </Grid.Column>\n            <Grid.Column width={10}>\n              <h3>{business.name}</h3>\n              <div style={{ float: \"left\", width:\"50%\" }}>\n                <span>{business.categories.map(v => v.title).join(\", \")}</span> <br />\n                {business.price && \n                  <>\n                    <b style={{color: \"green\"}}>{business.price}</b><br/>\n                    {renderedStars}<br/>\n                    {business.review_count} reviews \n                  </>\n                }\n                <div style={{ position: \"absolute\", bottom: '0', width:\"50%\"}}>\n                {business.display_phone} <br />\n                {business.location.display_address.join(\", \")}\n                <br /><br />\n                </div>\n              </div>\n              <div style={{ float: \"right\" }}>\n                <Dropdown\n                  placeholder='Select Date'\n                  fluid\n                  selection\n                  options={localeDates.map((v, i) => ({ key: business.id + v, text: v, value: i }))}\n                  style={{ marginBottom: \"5px\" }}\n                  onChange={(e, data) => {\n                    if (data.value === \"\") {\n                      this.setState({ dateIndex: -1 });\n                    } else {\n                      this.setState({ dateIndex: data.value });\n                    }\n                  }}\n                  clearable\n                />\n                <TimeInput \n                  name=\"startTime\"\n                  value={startTime}\n                  onChange={(e, data) => this.setState({ startTime: data.value })}\n                  clearable\n                  onClear={() => {this.setState({ startTime: '' })}}\n                  timeFormat=\"AMPM\" \n                  icon={false}\n                  placeholder=\"Select Start Time\"\n                  style={{ marginBottom: \"5px\" }}\n                />\n                <TimeInput \n                  name=\"endTime\"\n                  value={endTime}\n                  onChange={(e, data) => this.setState({ endTime: data.value })}\n                  clearable\n                  onClear={() => {this.setState({ endTime: '' })}}\n                  timeFormat=\"AMPM\" \n                  icon={false}\n                  placeholder=\"Select End Time\"\n                  style={{ marginBottom: \"5px\" }}\n                />\n                <Button \n                  icon \n                  color=\"teal\" \n                  labelPosition=\"right\" \n                  disabled={dateIndex === -1 || startTime === '' || endTime === '' || new Date('1970/01/01 ' + startTime) >= new Date('1970/01/01 ' + endTime)} \n                  onClick={this.handleSelect}\n                >\n                  Add to plan\n                  <Icon name=\"add\"></Icon>\n                </Button>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    )\n  }\n}\n\nexport default SearchResultCard;","import React from 'react';\nimport { \n  Input, \n  Container, \n  Button, \n  Grid, \n  Divider, \n  Header, \n  Placeholder, \n  Segment, \n  Dimmer, \n  Loader,\n} from 'semantic-ui-react';\nimport SearchResultCard from './SearchResultCard';\nimport { Backpack } from 'react-kawaii';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      query: '', \n      results: [],\n      loading: false,\n    };\n  }\n\n  getSelectedLocation = () => {\n    return this.state.location ? this.state.location : this.props.location;\n  }\n\n  getYelpURL = (query) => {\n    const location = this.getSelectedLocation();\n    return 'https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=' + query + '&latitude=' + location.lat.toString() + '&longitude=' + location.lon.toString();\n  }\n\n  searchHandler = (event) => {\n    const { query } = this.state;\n    this.setState({\n      loading: true,\n    }, () => {\n      fetch(this.getYelpURL(query), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        Authorization: 'Bearer ' + process.env.REACT_APP_YELP_API_KEY,\n      }\n    }).then(response => response.json())\n      .then(data => {\n        this.setState({\n          results: data.businesses,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  clearResults = () => {\n    this.setState({\n      query: '',\n      results: [],\n    });\n  }\n\n  getPlaceholderCards = () => {\n    let cards = [];\n    for (let i = 0; i < 20; i++) {\n      cards.push(\n        <Segment key={i} raised style={{ marginRight: '10px' }}>\n          <Grid celled>\n            <Grid.Row>\n              <Grid.Column width={6} >\n                <Placeholder>\n                  <Placeholder.Image style={{ objectFit: \"cover\", width: \"100%\", height: \"200px\" }}/>\n                </Placeholder>\n              </Grid.Column>\n              <Grid.Column width={10}>\n                  <Dimmer active inverted>\n                    <Loader inverted>Loading</Loader>\n                  </Dimmer>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      );\n    }\n    return cards;\n  }\n\n  render() {\n    const { query, results, loading } = this.state;\n    const { dates, addBusiness } = this.props;\n\n    const RESULTS_HEIGHT = (window.innerHeight - 68).toString() + 'px';\n    const renderedLoadingResults = this.getPlaceholderCards();\n    const location = this.getSelectedLocation();\n\n    return (\n      <Container>\n        <div style={{ marginTop: '20px', marginBottom: '10px' }}>\n          <Grid columns=\"equal\">\n            <Grid.Row>\n              <Grid.Column>\n                <Header size=\"huge\">\n                  Things to do around {location.name}\n                </Header>\n                <Input \n                  style={{ marginRight: '10px', marginTop: '10px' }}\n                  action={{\n                    color: 'teal',\n                    icon: 'search',\n                    onClick: this.searchHandler,\n                    disabled: !query,\n                  }}\n                  value={query}\n                  placeholder={\"Search\"}\n                  onChange={e => { this.setState({ query: e.target.value }) }} \n                  onKeyPress={event => {\n                    if (event.key === 'Enter') {\n                      this.searchHandler();\n                    }\n                  }}\n                />\n                <Button\n                  style={{ marginRight: '10px', marginTop: '10px' }}\n                  icon=\"idea\"\n                  labelPosition=\"right\"\n                  color=\"teal\"\n                  content=\"What's popular?\"\n                  onClick={() =>\n                    this.setState({\n                      query: '',\n                    }, this.searchHandler)\n                  }\n                />\n                {results.length > 0 &&\n                  <Button\n                    style={{ marginRight: '10px', marginTop: '10px' }}\n                    icon=\"remove circle\"\n                    labelPosition=\"right\"\n                    color=\"teal\"\n                    content=\"Clear results\"\n                    onClick={this.clearResults}\n                  />\n                }\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n        <Divider fitted />\n        {loading && renderedLoadingResults}\n        {results.length === 0 && !loading && \n          <Container textAlign='center' style={{marginTop: '25%'}}>\n            <Backpack size={220} mood=\"excited\" color=\"#00B5AD\" />\n            <Header as='h1'>\n                Your search results will appear here\n                <Header.Subheader>\n                  Type a category of interest or check out what's popular.\n                </Header.Subheader>\n              </Header>\n          </Container>\n        }\n        {results.length > 0 && \n          <Container style={{ overflow: 'auto', maxHeight: RESULTS_HEIGHT, paddingTop: '10px', paddingBottom: '10px' }}>\n            <Container>\n              {results.map((value, i) => (\n                <SearchResultCard key={i.toString()} business={value} dates={dates} addBusiness={addBusiness} />\n              ))}\n            </Container>\n          </Container>\n        }\n      </Container>\n    )\n  }\n}\n\nexport default Search;","import React from 'react';\nimport { Segment, Grid, Button, Form, Header } from 'semantic-ui-react';\nimport { DatesRangeInput } from 'semantic-ui-calendar-react';\nimport Geosuggest from 'react-geosuggest';\nimport { Link } from 'react-router-dom';\nimport BackgroundSlider from 'react-background-slider';\nimport travel1 from '../images/travel1.jpg';\nimport travel2 from '../images/travel2.jpg';\nimport travel3 from '../images/travel3.jpg';\nimport travel4 from '../images/travel4.jpg';\nimport travel5 from '../images/travel5.jpg';\nimport travel6 from '../images/travel6.jpg';\nimport travel7 from '../images/travel7.jpg';\n\nclass StartMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datesRange: '',\n      location: null,\n      dateCheck: true,\n      placeCheck: true,\n    }\n  }\n\n  handleChange = (event, { name, value }) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value, \n        dateCheck: value.split(\" - \").length < 2 ? true : value.split(\" - \")[1].length === 0 });\n    }\n  }\n\n  getDates = (startDate, endDate) => {\n    let dates = [],\n        currentDate = startDate,\n        addDays = function(days) {\n          let date = new Date(this.valueOf());\n          date.setDate(date.getDate() + days);\n          return date;\n        };\n    while (currentDate <= endDate) {\n      dates.push(currentDate);\n      currentDate = addDays.call(currentDate, 1);\n    }\n    return dates;\n  }\n\n  getBackground = () => {\n    const slideImages = [\n      travel1,\n      travel2,\n      travel3,\n      travel4,\n      travel5,\n      travel6,\n      travel7,\n    ];\n\n    return (\n      <BackgroundSlider\n        images={slideImages}\n        duration={7} \n        transition={2} \n      />\n    );\n  }\n\n  handleStartPlan = (e) => {\n    const { datesRange, location } = this.state;\n    const { startPlan } = this.props;\n\n    let dateStrings = datesRange.split(' - ');\n    function format(s) {\n      let l = s.split('-');\n      let temp = l[0];\n      l[0] = l[1];\n      l[1] = temp;\n      return l.join('-');\n    }\n    let start = new Date(format(dateStrings[0]));\n    let end = new Date(format(dateStrings[1]));\n\n    let dates = this.getDates(start, end);\n    startPlan(location, dates);\n  }\n\n  stripLocationName = (location) => {\n    return location.split(',')[0];\n  }\n\n  render() {\n    const { datesRange, dateCheck, placeCheck } = this.state;\n    const renderedBackground = this.getBackground();\n\n    return (\n      <div style={{height: '100vh'}}>\n        {renderedBackground}\n        <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Segment>\n              <Header>Plan Your Next Adventure.</Header>\n              <Form size={\"large\"}>\n                <DatesRangeInput\n                  name=\"datesRange\"\n                  placeholder=\"From - To\"\n                  value={datesRange}\n                  iconPosition=\"left\"\n                  onChange={this.handleChange}\n                />\n                <Geosuggest onSuggestSelect={selected => {\n                  if (selected) {\n                    this.setState({\n                      placeCheck: false, \n                      location: {\n                        lat: selected.location.lat, \n                        lon: selected.location.lng,\n                        name: this.stripLocationName(selected.label),\n                      }\n                    })\n                  }\n                }}/>\n                <br/>\n                <Button as={Link} to=\"/plan\" onClick={this.handleStartPlan} disabled={dateCheck || placeCheck} color='teal' fluid size='large'>\n                  Start Planning!\n                </Button>\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default StartMenu;","import React from 'react';\nimport Calendar from './Calendar';\nimport Search from './Search';\nimport { Grid } from 'semantic-ui-react'\nimport StartMenu from './StartMenu';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nclass Planner extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedEvents: {},\n      location: {},\n      dates: [],\n    }\n  }\n\n  addBusinessToPlanner = (business, date, startTime, endTime) => {\n    const { selectedEvents } = this.state;\n\n    var selectedEventsCopy = {...selectedEvents};\n    const dateKey = date.toDateString();\n    if (!selectedEventsCopy.hasOwnProperty(dateKey)) {\n      selectedEventsCopy[dateKey] = {};\n    }\n    if (!selectedEventsCopy[dateKey].hasOwnProperty(startTime)) {\n      selectedEventsCopy[dateKey][startTime] = {};\n    } \n\n    selectedEventsCopy[dateKey][startTime][endTime] = business;\n\n    this.setState({\n      selectedEvents: selectedEventsCopy,\n    });\n  }\n\n  deleteSelectedEvent = (date, startTime, endTime) => {\n    const { selectedEvents } = this.state; \n\n    var selectedEventsCopy = {...selectedEvents};\n    delete selectedEventsCopy[date][startTime][endTime];\n    if (Object.keys(selectedEventsCopy[date][startTime]).length === 0) {\n      delete selectedEventsCopy[date][startTime];\n    }\n    if (Object.keys(selectedEventsCopy[date]).length === 0) {\n      delete selectedEventsCopy[date];\n    }\n\n    this.setState({\n      selectedEvents: selectedEventsCopy,\n    });\n  }\n\n  startPlan = (location, dates) => {\n    this.setState({ location: location, dates: dates });\n  }\n\n  render() {\n    const { selectedEvents, dates, location } = this.state; \n\n    return (\n      <Router>\n        <Route exact path=\"/\" render={() => <StartMenu startPlan={this.startPlan} />}/>\n        <Route path=\"/plan\" render={() => (\n          <Grid columns={2} divided style={{height: '100vh'}}>\n            <Grid.Row>\n              <Grid.Column>\n                <Calendar dates={dates} selected={selectedEvents} deleteSelectedEvent={this.deleteSelectedEvent}/>\n              </Grid.Column>\n              <Grid.Column>\n                <Search dates={dates} location={location} addBusiness={this.addBusinessToPlanner} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        )}/>\n      </Router>\n    )\n  }\n}\n\nexport default Planner;","import React from 'react';\nimport Planner from './components/Planner';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Planner />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}