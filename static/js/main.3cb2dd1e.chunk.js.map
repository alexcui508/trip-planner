{"version":3,"sources":["images/travel1.jpg","images/travel2.jpg","images/travel3.jpg","images/travel4.jpg","images/travel5.jpg","images/travel6.jpg","images/travel7.jpg","components/Map.jsx","components/BusinessDetail.jsx","components/EventCard.jsx","components/Day.jsx","components/Calendar.jsx","components/SearchResultCard.jsx","components/Search.jsx","components/StartMenu.jsx","components/Planner.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MyMapComponent","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","isMarkerShown","position","Map","this","latitude","longitude","loadingElement","style","height","containerElement","mapElement","Component","BusinessDetail","getRenderedPhotos","details","photos","map","photo","Image","src","verticalAlign","width","getAddress","full_address","location","display_address","address","i","length","push","getCategories","categories","titles","categoryTitle","title","getOperatingDays","availabilities","hours","operatingDays","numToDay","Array","forEach","availability","operatingDay","day","convert24to12","hour24","hour","parseInt","slice","minutes","amOrPm","toString","getFormattedHoursString","start","end","open","close","getFormattedHours","daysToHours","Object","keys","formattedHoursString","operatingHours","hoursString","formattedHours","List","Item","getRenderedReviews","reviewData","convertRating","renderedReviews","reviews","review","userRating","rating","timeCreated","Date","time_created","toDateString","Feed","Event","Label","user","image_url","objectFit","Content","Summary","name","Extra","text","loading","price","Container","textAlign","Icon","size","renderedPhotos","isCurrentlyOpen","is_open_now","Grid","celled","columns","Row","Column","Header","as","infinite","dots","centered","draggable","arrowLeft","arrowRight","addArrowClickHandler","relaxed","display_phone","color","coordinates","React","EventCard","getYelpDetailsUrl","id","getYelpReviewsUrl","searchHandler","eventInfo","setState","fetch","method","headers","Authorization","then","response","json","data","renderedStars","addHalf","Number","isInteger","getRenderedEventCard","isHovered","state","Segment","attached","secondary","Subheader","v","join","eventDate","eventTime","deleteSelectedEvent","renderedEventCard","marginRight","link","onClick","Modal","trigger","marginBottom","onMouseEnter","onMouseLeave","Day","handleClick","e","titleProps","index","newIndex","activeIndex","getRenderedEvents","eventsWithTimes","renderedEvents","sortedEventsWithTimes","sort","time1","time2","key","event","business","Accordion","Title","active","Group","Calendar","groupEvents","sortedEvents","selected","event1","event2","date","getTime","groupedEvents","time","getRenderedDays","renderedDays","getTimeRange","dates","startDate","endDate","timeRange","RESULTS_HEIGHT","window","innerHeight","marginTop","container","Divider","fitted","paddingLeft","SearchResultCard","handleSelect","dateIndex","addBusiness","numStars","localeDates","d","toLocaleDateString","raised","float","bottom","review_count","Dropdown","placeholder","fluid","selection","options","value","onChange","clearable","onClear","timeFormat","icon","Button","labelPosition","disabled","Search","getSelectedLocation","getYelpURL","query","lon","results","businesses","clearResults","getPlaceholderCards","cards","Placeholder","Dimmer","inverted","Loader","renderedLoadingResults","Input","action","target","onKeyPress","content","overflow","maxHeight","paddingTop","paddingBottom","StartMenu","handleChange","hasOwnProperty","split","getDates","currentDate","addDays","days","valueOf","setDate","getDate","call","getBackground","slideImages","travel1","travel2","travel3","travel4","travel5","travel6","travel7","images","duration","transition","handleStartPlan","datesRange","startPlan","dateStrings","format","s","l","temp","stripLocationName","dateCheck","placeCheck","renderedBackground","maxWidth","Form","iconPosition","onSuggestSelect","label","Link","to","Planner","addBusinessToPlanner","selectedEvents","newBusiness","existingElementIndex","selectedEvent","selectedEventsCopy","indexToRemove","splice","exact","path","render","divided","App","className","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cb2dd1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/travel1.eda7aff3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel2.f85b1e62.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel3.373599b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel4.06f3c00f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel5.3b3c1978.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel6.ca2510a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel7.eba269f6.jpg\";","import React from 'react';\nimport { Component } from 'react';\nimport { withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\n\nconst MyMapComponent = withGoogleMap((props) =>\n  <GoogleMap\n    defaultZoom={18}\n    defaultCenter={{ lat: props.lat, lng: props.lng }}\n  >\n    {props.isMarkerShown && <Marker position={{ lat: props.lat, lng: props.lng }} />}\n  </GoogleMap>\n);\n\nclass Map extends Component {\n  render() {\n    const { latitude, longitude } = this.props;\n    return (\n      <MyMapComponent \n        isMarkerShown \n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `400px` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n        lat={latitude}\n        lng={longitude}\n      />\n    );\n  }\n}\n\nexport default Map;","import React from 'react';\nimport { Grid, Image, Icon, Header, List, Container, Feed } from 'semantic-ui-react';\nimport Map from './Map';\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nclass BusinessDetail extends React.Component {\n  getRenderedPhotos = () => {\n    const { details } = this.props;\n    let photos = details.photos;\n    let renderedPhotos = photos.map((photo) =>\n      <Image src={photo} verticalAlign='middle' style={{height: '400px', width: 'auto'}}/>\n    );\n    return renderedPhotos;\n  }\n\n  getAddress = () => {\n    const { details } = this.props;\n    let full_address = details.location.display_address;\n    let address = [];\n    for (let i = 0; i < full_address.length - 1; i++) {\n      address.push(full_address[i]);\n      address.push(\", \");\n    }\n    address.push(full_address[full_address.length - 1]);\n    return address;\n  }\n\n  getCategories = () => {\n    const { details } = this.props;\n    let categories = details.categories;\n    let titles = [];\n    for (let i = 0; i < categories.length - 1; i++) {\n      let categoryTitle = categories[i].title;\n      titles.push(categoryTitle);\n      titles.push(\", \");\n    }\n    titles.push(categories[categories.length - 1].title);\n    return titles;\n  }\n\n  getOperatingDays = () => {\n    const { details } = this.props;\n    const availabilities = details.hours[0]['open'];\n\n    var operatingDays = {\n      'Monday': [],\n      'Tuesday': [],\n      'Wednesday': [],\n      'Thursday': [],\n      'Friday': [],\n      'Saturday': [],\n      'Sunday': [],\n    };\n\n    var numToDay = new Array(7);\n    numToDay[0] = 'Monday';\n    numToDay[1] = 'Tuesday';\n    numToDay[2] = 'Wednesday';\n    numToDay[3] = 'Thursday';\n    numToDay[4] = 'Friday';\n    numToDay[5] = 'Saturday';\n    numToDay[6] = 'Sunday';\n\n    availabilities.forEach(availability => {\n      const operatingDay = numToDay[availability.day];\n      operatingDays[operatingDay].push(availability);\n    });\n    \n    return operatingDays;\n  }\n\n  convert24to12 = (hour24) => {\n    var hour = parseInt(hour24.slice(0, 2));\n    const minutes = hour24.slice(2, 5);\n    var amOrPm = 'AM';\n    if (hour > 12) {\n      hour %= 12;\n      amOrPm = 'PM';\n    }\n    return `${hour.toString()}:${minutes} ${amOrPm}`;\n  }\n\n  getFormattedHoursString = (start, end) => {\n    const open = this.convert24to12(start);\n    const close = this.convert24to12(end);\n    return `${open} - ${close}`;\n  }\n\n  getFormattedHours = () => {\n    const operatingDays = this.getOperatingDays();\n    var daysToHours = {\n      'Monday': '',\n      'Tuesday': '',\n      'Wednesday': '',\n      'Thursday': '',\n      'Friday': '',\n      'Saturday': '',\n      'Sunday': '',\n    };\n\n    Object.keys(operatingDays).forEach(day => {\n      const operatingHours = operatingDays[day];\n      var hoursString = '';\n      var availability;\n      var formattedHoursString;\n      if (operatingHours.length === 0) {\n        hoursString = 'CLOSED';\n      } else {\n        for (let i = 0; i < operatingHours.length - 1; i++) {\n          availability = operatingHours[i];\n          formattedHoursString = this.getFormattedHoursString(availability.start, availability.end);\n          hoursString += `${formattedHoursString}, `;\n        }\n        availability = operatingHours[operatingHours.length - 1];\n        formattedHoursString = this.getFormattedHoursString(availability.start, availability.end);\n        hoursString += `${formattedHoursString}`;\n      }\n      daysToHours[day] = hoursString;\n    });\n\n    var formattedHours = [];\n    Object.keys(daysToHours).forEach(day => {\n      formattedHours.push(<List.Item>{`${day} ${daysToHours[day]}`}</List.Item>);\n    });\n\n    return formattedHours;\n  }\n\n  getRenderedReviews = () => {\n    const { reviewData, convertRating } = this.props;\n\n    var renderedReviews = [];\n    reviewData.reviews.forEach(review => {\n      const userRating = convertRating(review.rating);\n      const timeCreated = new Date(review.time_created).toDateString();\n\n      renderedReviews.push(\n        <Feed.Event>\n          <Feed.Label>\n            <Image src={review.user.image_url} style={{ objectFit: 'cover', width: '35px', height: '35px'}} />\n          </Feed.Label>\n          <Feed.Content>\n            <Feed.Summary>\n              {review.user.name} {userRating} \n              <Feed.Date>{timeCreated}</Feed.Date>\n            </Feed.Summary>\n            <Feed.Extra text>{review.text}</Feed.Extra>\n          </Feed.Content>\n        </Feed.Event>\n      );\n    });\n\n    return renderedReviews;\n  }\n\n  render() {\n    const { details, loading, price, convertRating } = this.props;\n\n    if (loading) {\n      return <Container textAlign='center'><Icon name='circle notch' loading size='huge'/></Container>\n    }\n\n    const rating = convertRating(details.rating);\n    const titles = this.getCategories();\n    const renderedPhotos = this.getRenderedPhotos();\n    const address = this.getAddress();\n    const formattedHours = this.getFormattedHours();\n    const isCurrentlyOpen = details.hours[0].is_open_now;\n    const renderedReviews = this.getRenderedReviews();\n\n    return (\n      <Grid celled='internally' columns='equal'>\n        <Grid.Row>\n          <Grid.Column>\n            <Header as='h1'>\n              <Icon name='photo' />\n              <Header.Content>Photos</Header.Content>\n            </Header>\n            <Carousel\n              infinite\n              dots\n              centered\n              draggable={false}\n              arrowLeft={<Icon size='big' name='arrow left' />}\n              arrowRight={<Icon size='big' name='arrow right' />}\n              addArrowClickHandler\n            >\n              {renderedPhotos}\n            </Carousel>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={6}>\n            <Header as='h1'>\n              <Icon name='info circle' />\n              <Header.Content>Basic Information</Header.Content>\n            </Header>\n            <List relaxed>\n              <List.Item><List.Header>Address</List.Header>{address}</List.Item>\n              <List.Item><List.Header>Phone</List.Header>{details.display_phone}</List.Item>\n              <List.Item>\n                <List.Header>\n                  <span>Regular Hours {isCurrentlyOpen ? <div style={{color:'green'}}>Currently Open</div> : <div style={{color:'red'}}>Currently Closed</div>}</span>\n                </List.Header>\n                {formattedHours}\n              </List.Item>\n              <List.Item><List.Header>Price</List.Header>{price}</List.Item>\n              <List.Item><List.Header>Rating</List.Header>{rating}</List.Item>\n              <List.Item><List.Header>Categories</List.Header>{titles}</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Header as='h1'>\n              <Icon name='users' />\n              <Header.Content>Highlighted Reviews</Header.Content>\n            </Header>\n            <Feed>\n              {renderedReviews}\n            </Feed>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <Header as='h1'>\n              <Icon name='map' />\n              <Header.Content>Map</Header.Content>\n            </Header>\n            <Map latitude={details.coordinates.latitude} longitude={details.coordinates.longitude} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default BusinessDetail;","import React from 'react';\nimport { \n  Modal, \n  Icon, \n  Container,\n  Segment,\n  Header,\n  Grid,\n} from 'semantic-ui-react';\nimport BusinessDetail from './BusinessDetail';\n\nclass EventCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      details: [],\n      reviewData: [],\n      loading: false,\n      isHovered: false,\n    };\n  }\n\n  getYelpDetailsUrl = (id) => {\n    return `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${id}`;\n  }\n\n  getYelpReviewsUrl = (id) => {\n    return `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${id}/reviews`;\n  }\n\n  searchHandler = () => {\n    const { eventInfo } = this.props;\n\n    this.setState({\n      loading: true,\n    }, () => {\n      fetch(this.getYelpDetailsUrl(eventInfo.id), {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          Authorization: 'Bearer ' + process.env.REACT_APP_YELP_API_KEY\n        }\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          details: data,\n        });\n      })\n      .then(() => {\n        fetch(this.getYelpReviewsUrl(eventInfo.id), {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            Authorization: 'Bearer ' + process.env.REACT_APP_YELP_API_KEY\n          }\n        })\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            reviewData: data,\n            loading: false,\n          });\n        });\n      });\n    });\n  }\n\n  convertRating = (rating) => {\n    var renderedStars = [];\n    var addHalf = false;\n\n    if (!Number.isInteger(rating)) {\n      rating -= 0.5;\n      addHalf = true;\n    }\n\n    for (let i = 0; i < rating; i++) {\n      renderedStars.push(<Icon name='star' color='yellow' />);\n    }\n\n    if (addHalf) {\n      renderedStars.push(<Icon name='star half' color='yellow' />);\n    }\n\n    return renderedStars\n  }\n\n  getRenderedEventCard = () => {\n    const { isHovered } = this.state;\n    const { eventInfo } = this.props;\n\n    return (\n      <Segment attached color=\"teal\" secondary={isHovered}>\n        <Header as='h2'>\n          {eventInfo.name}\n          <Header.Subheader>{eventInfo.categories.map(v => v.title).join(\", \")}</Header.Subheader>\n          <Header.Subheader>{eventInfo.location.display_address.join(\", \")}</Header.Subheader>\n          <Header.Subheader>{eventInfo.display_phone}</Header.Subheader>\n        </Header>\n      </Segment>\n    );\n  }\n\n  render() {\n    const { loading, details, reviewData } = this.state;\n    const { eventInfo, eventDate, eventTime, deleteSelectedEvent } = this.props;\n\n    const renderedEventCard = this.getRenderedEventCard();\n\n    return (\n      <>\n        <div style={{ marginRight: '10px' }}>\n          <Header as='h1' attached='top'>\n            <Grid columns=\"equal\">\n              <Grid.Row>\n                <Grid.Column>{eventTime}</Grid.Column>\n                <Grid.Column textAlign=\"right\" style={{marginRight: '-10px'}}>\n                  <Icon link name=\"delete\" color=\"red\" onClick={() => {deleteSelectedEvent(eventDate, eventTime)}}/>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Header>\n        </div>\n        <Modal trigger={\n          <div \n            style={{ marginBottom: '20px', marginRight: '10px' }} \n            onClick={this.searchHandler} \n            onMouseEnter={() => this.setState({ isHovered: true })}\n            onMouseLeave={() => this.setState({ isHovered: false })}\n          >\n            {renderedEventCard}\n          </div>\n        }>\n          <Modal.Header> \n            <Header as='h1'>\n              <Header.Content>{eventInfo.name}</Header.Content>\n              <Header.Subheader>\n                {eventDate}, {eventTime}\n              </Header.Subheader>\n            </Header>\n          </Modal.Header>\n          <Modal.Content>\n            <BusinessDetail \n              loading={loading} \n              details={details}\n              reviewData={reviewData} \n              price={\n                <Container style={{color:'green'}}>\n                  {eventInfo.price}\n                </Container>\n              } \n              convertRating={this.convertRating}\n            />\n          </Modal.Content>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default EventCard;","import React from 'react';\nimport { \n  Accordion, \n  Icon, \n  Label, \n  Grid, \n} from 'semantic-ui-react';\nimport EventCard from './EventCard';\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeIndex: 0\n    };\n  }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  getRenderedEvents = () => {\n    const { eventsWithTimes, eventDate, deleteSelectedEvent } = this.props;\n\n    var renderedEvents = [];\n\n    const sortedEventsWithTimes = {};\n    Object.keys(eventsWithTimes).sort((time1, time2) => {\n      return new Date('1970/01/01 ' + time1) - new Date('1970/01/01 ' + time2);\n    }).forEach((key) => {\n      sortedEventsWithTimes[key] = eventsWithTimes[key];\n    });\n\n    for (const eventTime in sortedEventsWithTimes) {\n      const event = sortedEventsWithTimes[eventTime];\n      renderedEvents.push(<EventCard eventDate={eventDate} eventInfo={event.business} eventTime={eventTime} deleteSelectedEvent={deleteSelectedEvent} />);\n    }\n\n    return renderedEvents;\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n    const { eventDate } = this.props;\n\n    const renderedEvents = this.getRenderedEvents();\n\n    return (\n      <Accordion>\n        <Accordion.Title active={activeIndex === 0} index={0} onClick={this.handleClick}>\n          <Label.Group size=\"big\">\n            <Label> \n              <Icon name=\"dropdown\"/>\n              {eventDate}\n            </Label>\n            <Label color=\"teal\">\n              {renderedEvents.length}\n            </Label>\n          </Label.Group>\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 0}>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={2}>\n              </Grid.Column>\n              <Grid.Column width={12}>\n                {renderedEvents}  \n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Accordion.Content>\n      </Accordion>\n    );\n  }\n}\n\nexport default Day;","import React from 'react';\nimport Day from './Day';\nimport { \n  Header, \n  Container,\n  Grid,\n  Divider,\n} from 'semantic-ui-react';\n\nclass Calendar extends React.Component {\n  groupEvents = () => {\n    const { selected } = this.props;\n\n    const sortedEvents = selected.sort((event1, event2) => { return event1.date.getTime() - event2.date.getTime() });\n\n    var groupedEvents = {};\n\n    sortedEvents.forEach((event) => {\n      let eventDate = event.date.toDateString();\n      groupedEvents[eventDate] = {};\n    }); \n\n    sortedEvents.forEach((event) => {\n      let eventDate = event.date.toDateString();\n      groupedEvents[eventDate][event.time] = event;\n    });\n\n    return groupedEvents;\n  }\n\n  getRenderedDays = () => {\n    var renderedDays = [];\n    const groupedEvents = this.groupEvents();\n\n    for (const eventDate in groupedEvents) {\n      const eventsWithTimes = groupedEvents[eventDate];\n      renderedDays.push(<Day eventsWithTimes={eventsWithTimes} eventDate={eventDate} deleteSelectedEvent={this.props.deleteSelectedEvent} />);\n    }\n\n    return renderedDays;\n  }\n\n  getTimeRange = () => {\n    const { dates } = this.props;\n    \n    const startDate = dates[0];\n    const endDate = dates[dates.length - 1];\n\n    return {\n      start: startDate.toDateString(),\n      end: endDate.toDateString(),\n    }\n  }\n\n  render() {\n    const renderedDays = this.getRenderedDays();\n    const timeRange = this.getTimeRange();\n    const RESULTS_HEIGHT = (window.innerHeight - 68).toString() + 'px';\n\n    return (\n      <Container>\n        <div style={{ marginTop: '20px', marginBottom: '10px' }}>\n          <Grid container>\n            <Grid.Row>\n              <Grid.Column>\n                <Header size=\"huge\">Your Itinerary</Header>\n                <Grid>\n                  <Grid.Row>\n                    <Grid.Column width={2}>\n                      <Header size=\"small\">Start Date</Header> \n                    </Grid.Column>\n                    <Grid.Column width={14} style={{marginBottom: '10px'}}>\n                      <Header size=\"small\" color=\"grey\">{timeRange.start}</Header>\n                    </Grid.Column>\n                    <Grid.Column width={2}>\n                      <Header size=\"small\">End Date</Header> \n                    </Grid.Column>\n                    <Grid.Column width={14}>\n                      <Header size=\"small\" color=\"grey\">{timeRange.end}</Header>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n        <Divider fitted />\n        <Container style={{ 'overflowY': 'auto', 'overflowX': 'hidden', height: RESULTS_HEIGHT, paddingLeft: '20px'}}>\n          {renderedDays}\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default Calendar;","import React from 'react';\nimport { \n  Segment, \n  Grid, \n  Image, \n  Button, \n  Icon, \n  Dropdown, \n} from 'semantic-ui-react';\nimport { TimeInput } from 'semantic-ui-calendar-react';\n\nclass SearchResultCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dateIndex: -1, \n      time: '',\n    }\n  }\n\n  handleSelect = (e) => {\n    const { dateIndex, time } = this.state;\n    const { addBusiness, business, dates } = this.props;\n\n    addBusiness(business, dates[dateIndex], time);\n  }\n\n  convertRating = () => {\n    const { business } = this.props;\n\n    var renderedStars = [];\n    var numStars = business.rating;\n    var addHalf = false;\n\n    if (!Number.isInteger(numStars)) {\n      numStars -= 0.5;\n      addHalf = true;\n    }\n\n    for (let i = 0; i < numStars; i++) {\n      renderedStars.push(<Icon name='star' color='yellow' />);\n    }\n\n    if (addHalf) {\n      renderedStars.push(<Icon name='star half' color='yellow' />);\n    }\n\n    return renderedStars;\n  }\n\n  render() {\n    const { time, dateIndex } = this.state;\n    const { business, dates } = this.props;\n\n    const localeDates = dates.map(d => d.toLocaleDateString());\n    const renderedStars = this.convertRating();\n\n    return (\n      <Segment raised style={{ marginRight: '10px' }}>\n        <Grid celled>\n          <Grid.Row>\n            <Grid.Column width={6} >\n              <Image src={business.image_url} style={{ objectFit: \"cover\", width: \"100%\", height: \"200px\" }} />\n            </Grid.Column>\n            <Grid.Column width={10}>\n              <h3>{business.name}</h3>\n              <div style={{ float: \"left\", width:\"50%\" }}>\n                <span>{business.categories.map(v => v.title).join(\", \")}</span> <br />\n                {business.price && \n                  <>\n                    <b style={{color: \"green\"}}>{business.price}</b><br/>\n                    {renderedStars}\n                  </>\n                }\n                <div style={{ position: \"absolute\", bottom: '0', width:\"50%\"}}>\n                {business.display_phone} <br />\n                {business.location.display_address.join(\", \")}\n                <br /><br />\n                </div>\n              </div>\n              <div style={{ float: \"right\" }}>\n                {business.review_count} reviews \n                <br />\n                <br />\n                <Dropdown\n                  placeholder='Select Date'\n                  fluid\n                  selection\n                  options={localeDates.map((v, i) => ({ key: business.id + v, text: v, value: i }))}\n                  style={{ marginBottom: \"5px\" }}\n                  onChange={(e, data) => this.setState({ dateIndex: data.value })}\n                />\n                <TimeInput \n                  name=\"time\"\n                  value={time}\n                  onChange={(e, data) => this.setState({ time: data.value })}\n                  clearable\n                  onClear={() => {this.setState({ time: '' })}}\n                  timeFormat=\"AMPM\"\n                  icon={false}\n                  placeholder=\"Select Time\"\n                  style={{ marginBottom: \"5px\" }}\n                />\n                <Button icon color=\"teal\" labelPosition=\"right\" disabled={dateIndex === -1 || time === ''} onClick={this.handleSelect}>\n                  Add to plan\n                  <Icon name=\"add\"></Icon>\n                </Button>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    )\n  }\n}\n\n\nexport default SearchResultCard;","import React from 'react';\nimport { \n  Input, \n  Container, \n  Button, \n  Grid, \n  Divider, \n  Header, \n  Placeholder, \n  Segment, \n  Dimmer, \n  Loader,\n} from 'semantic-ui-react';\nimport SearchResultCard from './SearchResultCard';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      query: '', \n      results: [],\n      loading: false,\n    };\n  }\n\n  getSelectedLocation = () => {\n    return this.state.location ? this.state.location : this.props.location;\n  }\n\n  getYelpURL = (query) => {\n    const location = this.getSelectedLocation();\n    return 'https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=' + query + '&latitude=' + location.lat.toString() + '&longitude=' + location.lon.toString();\n  }\n\n  searchHandler = (event) => {\n    const { query } = this.state;\n    this.setState({\n      loading: true,\n    }, () => {\n      fetch(this.getYelpURL(query), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        Authorization: 'Bearer ' + process.env.REACT_APP_YELP_API_KEY,\n      }\n    }).then(response => response.json())\n      .then(data => {\n        this.setState({\n          results: data.businesses,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  clearResults = () => {\n    this.setState({\n      query: '',\n      results: [],\n    });\n  }\n\n  getPlaceholderCards = () => {\n    let cards = [];\n    for (let i = 0; i < 20; i++) {\n      cards.push(\n        <Segment key={i} raised style={{ marginRight: '10px' }}>\n          <Grid celled>\n            <Grid.Row>\n              <Grid.Column width={6} >\n                <Placeholder>\n                  <Placeholder.Image style={{ objectFit: \"cover\", width: \"100%\", height: \"200px\" }}/>\n                </Placeholder>\n              </Grid.Column>\n              <Grid.Column width={10}>\n                  <Dimmer active inverted>\n                    <Loader inverted>Loading</Loader>\n                  </Dimmer>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      );\n    }\n    return cards;\n  }\n\n  render() {\n    const { query, results, loading } = this.state;\n    const { dates, addBusiness } = this.props;\n\n    const RESULTS_HEIGHT = (window.innerHeight - 68).toString() + 'px';\n    const renderedLoadingResults = this.getPlaceholderCards();\n    const location = this.getSelectedLocation();\n\n    return (\n      <Container>\n        <div style={{ marginTop: '20px', marginBottom: '10px' }}>\n          <Grid columns=\"equal\">\n            <Grid.Row>\n              <Grid.Column width={12}>\n                <Header size=\"huge\">\n                  Things to do around {location.name}\n                </Header>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <Input \n                  style={{ marginRight: '10px', marginTop: '10px' }}\n                  action={{\n                    color: 'teal',\n                    icon: 'search',\n                    onClick: this.searchHandler,\n                    disabled: !query,\n                  }}\n                  value={query}\n                  placeholder={\"Search\"}\n                  onChange={e => { this.setState({ query: e.target.value }) }} \n                  onKeyPress={event => {\n                    if (event.key === 'Enter') {\n                      this.searchHandler();\n                    }\n                  }}\n                />\n                <Button\n                  style={{ marginRight: '10px', marginTop: '10px' }}\n                  icon=\"idea\"\n                  labelPosition=\"right\"\n                  color=\"teal\"\n                  content=\"What's popular?\"\n                  onClick={() =>\n                    this.setState({\n                      query: '',\n                    }, this.searchHandler)\n                  }\n                />\n                {results && results[0] &&\n                  <Button\n                    style={{ marginRight: '10px', marginTop: '10px' }}\n                    icon=\"remove circle\"\n                    labelPosition=\"right\"\n                    color=\"teal\"\n                    content=\"Clear results\"\n                    onClick={this.clearResults}\n                  />\n                }\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n        <Divider fitted />\n        {loading && renderedLoadingResults}\n        {results && results[0] && \n          <Container style={{ overflow: 'auto', maxHeight: RESULTS_HEIGHT, paddingTop: '10px', paddingBottom: '10px' }}>\n            <Container>\n              {results.map((value, i) => (\n                <SearchResultCard key={i.toString()} business={value} dates={dates} addBusiness={addBusiness} />\n              ))}\n            </Container>\n          </Container>\n        }\n      </Container>\n    )\n  }\n}\n\nexport default Search;","import React from 'react';\nimport { Segment, Grid, Button, Form, Header } from 'semantic-ui-react';\nimport { DatesRangeInput } from 'semantic-ui-calendar-react';\nimport Geosuggest from 'react-geosuggest';\nimport { Link } from 'react-router-dom';\nimport BackgroundSlider from 'react-background-slider';\nimport travel1 from '../images/travel1.jpg';\nimport travel2 from '../images/travel2.jpg';\nimport travel3 from '../images/travel3.jpg';\nimport travel4 from '../images/travel4.jpg';\nimport travel5 from '../images/travel5.jpg';\nimport travel6 from '../images/travel6.jpg';\nimport travel7 from '../images/travel7.jpg';\n\nclass StartMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datesRange: '',\n      location: null,\n      dateCheck: true,\n      placeCheck: true,\n    }\n  }\n\n  handleChange = (event, { name, value }) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value, \n        dateCheck: value.split(\" - \").length < 2 ? true : value.split(\" - \")[1].length === 0 });\n    }\n  }\n\n  getDates = (startDate, endDate) => {\n    let dates = [],\n        currentDate = startDate,\n        addDays = function(days) {\n          let date = new Date(this.valueOf());\n          date.setDate(date.getDate() + days);\n          return date;\n        };\n    while (currentDate <= endDate) {\n      dates.push(currentDate);\n      currentDate = addDays.call(currentDate, 1);\n    }\n    return dates;\n  }\n\n  getBackground = () => {\n    const slideImages = [\n      travel1,\n      travel2,\n      travel3,\n      travel4,\n      travel5,\n      travel6,\n      travel7,\n    ];\n\n    return (\n      <BackgroundSlider\n        images={slideImages}\n        duration={7} \n        transition={2} \n      />\n    );\n  }\n\n  handleStartPlan = (e) => {\n    const { datesRange, location } = this.state;\n    const { startPlan } = this.props;\n\n    let dateStrings = datesRange.split(' - ');\n    function format(s) {\n      let l = s.split('-');\n      let temp = l[0];\n      l[0] = l[1];\n      l[1] = temp;\n      return l.join('-');\n    }\n    let start = new Date(format(dateStrings[0]));\n    let end = new Date(format(dateStrings[1]));\n\n    let dates = this.getDates(start, end);\n    startPlan(location, dates);\n  }\n\n  stripLocationName = (location) => {\n    return location.split(',')[0];\n  }\n\n  render() {\n    const { datesRange, dateCheck, placeCheck } = this.state;\n    const renderedBackground = this.getBackground();\n\n    return (\n      <div style={{height: '100vh'}}>\n        {renderedBackground}\n        <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Segment>\n              <Header>Plan Your Next Adventure.</Header>\n              <Form size={\"large\"}>\n                <DatesRangeInput\n                  name=\"datesRange\"\n                  placeholder=\"From - To\"\n                  value={datesRange}\n                  iconPosition=\"left\"\n                  onChange={this.handleChange}\n                />\n                <Geosuggest onSuggestSelect={selected => {\n                  if (selected) {\n                    this.setState({\n                      placeCheck: false, \n                      location: {\n                        lat: selected.location.lat, \n                        lon: selected.location.lng,\n                        name: this.stripLocationName(selected.label),\n                      }\n                    })\n                  }\n                }}/>\n                <br/>\n                <Button as={Link} to=\"/plan\" onClick={this.handleStartPlan} disabled={dateCheck || placeCheck} color='teal' fluid size='large'>\n                  Start Planning!\n                </Button>\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default StartMenu;","import React from 'react';\nimport Calendar from './Calendar';\nimport Search from './Search';\nimport { Grid } from 'semantic-ui-react'\nimport StartMenu from './StartMenu';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nclass Planner extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedEvents: [],\n      location: {},\n      dates: [],\n    }\n  }\n\n  addBusinessToPlanner = (business, date, time) => {\n    const { selectedEvents } = this.state;\n\n    const newBusiness = { business: business, date: date, time: time };\n    var existingElementIndex = -1;\n    selectedEvents.forEach((selectedEvent, i) => {\n      if (selectedEvent.date.toDateString() === date.toDateString() && selectedEvent.time === time) {\n        existingElementIndex = i;\n      }\n    });\n\n    if (existingElementIndex > -1) {\n      var selectedEventsCopy = [...selectedEvents];\n      selectedEventsCopy[existingElementIndex] = newBusiness;\n      this.setState({\n        selectedEvents: selectedEventsCopy,\n      });\n    } else {\n      this.setState({\n        selectedEvents: [...selectedEvents, newBusiness],\n      });\n    }\n  }\n\n  deleteSelectedEvent = (eventDate, eventTime) => {\n    const { selectedEvents } = this.state; \n\n    var selectedEventsCopy = [...selectedEvents];\n    var indexToRemove = -1;\n    selectedEventsCopy.forEach((selectedEvent, i) => {\n      if (selectedEvent.date.toDateString() === eventDate && selectedEvent.time === eventTime) {\n        indexToRemove = i;\n      }\n    });\n\n    if (indexToRemove > -1) {\n      selectedEventsCopy.splice(indexToRemove, 1);\n      this.setState({\n        selectedEvents: selectedEventsCopy,\n      });\n    }\n  }\n\n  startPlan = (location, dates) => {\n    this.setState({ location: location, dates: dates });\n  }\n\n  render() {\n    const { selectedEvents, dates, location } = this.state; \n\n    return (\n      <Router>\n        <Route exact path=\"/\" render={() => <StartMenu startPlan={this.startPlan} />}/>\n        <Route path=\"/plan\" render={() => (\n          <Grid columns={2} divided style={{height: '100vh'}}>\n            <Grid.Row>\n              <Grid.Column>\n                <Calendar dates={dates} selected={selectedEvents} deleteSelectedEvent={this.deleteSelectedEvent}/>\n              </Grid.Column>\n              <Grid.Column>\n                <Search dates={dates} location={location} addBusiness={this.addBusinessToPlanner} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        )}/>\n      </Router>\n    )\n  }\n}\n\nexport default Planner;","import React from 'react';\nimport Planner from './components/Planner';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Planner />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}